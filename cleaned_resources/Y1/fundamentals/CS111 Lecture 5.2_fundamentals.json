{
  "title": "CS111 Lecture 5.2",
  "language": "cpp",
  "topics": [
    "database",
    "networking",
    "algorithms",
    "fundamentals"
  ],
  "purpose": "if statement) while (condition) The statements are repeatedly executed",
  "code": "{\nwhile the condition\nis true.\nstatements\n}\nThe statements are\nalso called the body\nof the while.\n\uf0a7 It starts with the keyword \u201cwhile\u201d\nThe loop stops when\n\uf0a7 Followed by a condition\nthe condition is\n\uf0a7 Followed by one or more statements. false.\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nUsing while Loop\nAn investment problem:\n\uf0a7 Starting with $10,000, how many years until we have at least\n$20,000, if we get 5% interest.\n\uf0a7 The algorithm:\n1. Start with a year value of 0 and a balance of $10,000.\n2. Repeat the following steps\nwhile the balance is less than $20,000:\n\uf0a7 Add 1 to the year value.\n\uf0a7 Compute the interest over the current balance.\n\uf0a7 Add the interest to the balance.\n3. Report the final year value as the answer.\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nUsing while Loop\nA closer look at step 2\n2. Repeat the following steps\nwhile the balance is less than $20,000:\n\uf0a7 Add 1 to the year value.\n\uf0a7 Compute the interest over the current balance.\n\uf0a7 Add the interest to the balance.\n\uf0a7 To get the answer adding and multiplying must be repeated\nsome unknown number of times.\n.\n\uf0a7 While a condition is true\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nUsing while Loop\nA closer look at the condition\n2. Repeat the following steps\nwhile the balance is less than $20,000:\nThis can be implemented as:\nwhile (balance < TARGET)\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nUsing while Loop\nA closer look at the body\n\uf0a7 Add 1 to the year value.\n\uf0a7 Compute the interest over the current balance.\n\uf0a7 Add the interest to the balance.\nThis can be implemented as:\nyear++;\ndouble interest = balance * RATE / 100;\nbalance = balance + interest;\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nUsing while Loop\nPut together we get\nwhile (balance < TARGET)\n{\nyear++;\ndouble interest = balance * RATE / 100;\nbalance = balance + interest;\n}\n\uf0a7 Note, that variable interest is defined inside the loop.\n\uf0a7 Each iteration (round) will define a fresh variable interest.\n\uf0a7 This means it will not be used outside.\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nUsing while Loop\nPut together we get\nwhile (balance < TARGET)\n{\nyear++;\ndouble interest = balance * RATE / 100;\nbalance = balance + interest;\n}\n\uf0a7 Variable year and balance are defined outside the loop.\n\uf0a7 This means year and balance are used for all iterations.\n\uf0a7 They will be also used outside of the loop.\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nThe while Statement\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nThe Complete Program\nint main()\n{\nconst double RATE = 5;\nconst double INITIAL_BALANCE = 10000;\nconst double TARGET = 2 * INITIAL_BALANCE;\ndouble balance = INITIAL_BALANCE;\nint year = 0;\nwhile (balance < TARGET)\n{\nyear++;\ndouble interest = balance * RATE / 100;\nbalance = balance + interest;\n}\ncout << \"The investment doubled after \"\n<< year << \" years.\" << endl;\nreturn 0;\n}\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\n10000\n0\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\n10000\n0\n10000\n0\n?\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\n10000\n1\n10000\n1\n?\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\n10000\n1\n10000\n1\n500\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\n10500\n1\n10500\n1\n500\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\n10500\n1\n10500\n1\n500\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\n10500\n1\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\n10500\n1\n10500\n1\n?\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\n10500\n2\n10500\n2\n?\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\n10500\n2\n10500\n2\n525\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\n11025\n1\n11025\n2\n525\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\n10500\n1\n11025\n2\n525\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\n11025\n2\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\nbefore entering while's\nbody at the end of while's body\nbalance year interest balance year\n10000.00 0 500.00 10500.00 1\n10500.00 1 525.00 11025.00 2\n11025.00 2 551.25 11576.25 3\n\u2026this process goes on\n11576.25 3 578.81 12155.06 4\nand on \u2026\n12155.06 4 607.75 12762.82 5\n12762.82 5 638.14 13400.96 6\n13400.96 6 670.05 14071.00 7\n14071.00 7 703.55 14774.55 8\n14774.55 8 738.73 15513.28 9\n15513.28 9 775.66 16288.95 10\n16288.95 10 814.45 17103.39 11\n17103.39 11 855.17 17958.56 12\n17958.56 12 897.93 18856.49 13\n18856.49 13 942.82 19799.32 14\n19799.32 14 989.97 20789.28 15\n20789.28 15 while statement is over\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\nbefore entering while's\nbody at the end of while's body\nbalance year interest balance year\n10000.00 0 500.00 10500.00 1\n10500.00 1 525.00 11025.00 2\n11025.00 2 551.25 11576.25 3\n\u2026this process goes on\n11576.25 3 578.81 12155.06 4\nand on \u2026\n12155.06 4 607.75 12762.82 5\n12762.82 5 638.14 13400.96 6\n13400.96 6 670.05 14071.00 7\n14071.00 7 703.55 14774.55 8\n14774.55 8 738.73 15513.28 9\n15513.28 9 775.66 16288.95 10\n16288.95 10 814.45 17103.39 11\n17103.39 11 855.17 17958.56 12\n17958.56 12 897.93 18856.49 13\n18856.49 13 942.82 19799.32 14\n19799.32 14 989.97 20789.28 15\n20789.28 15 while statement is over\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\nbefore entering while's\nbody at the end of while's body\nbalance year interest balance year\n10000.00 0 500.00 10500.00 1\n10500.00 1 525.00 11025.00 2\n11025.00 2 551.25 11576.25 3\n\u2026this process goes on\n11576.25 3 578.81 12155.06 4\nand on \u2026\n12155.06 4 607.75 12762.82 5\n12762.82 5 638.14 13400.96 6\n13400.96 6 670.05 14071.00 7\n14071.00 7 703.55 14774.55 8\n14774.55 8 738.73 15513.28 9\n15513.28 9 775.66 16288.95 10\n16288.95 10 814.45 17103.39 11\n17103.39 11 855.17 17958.56 12\n17958.56 12 897.93 18856.49 13\n18856.49 13 942.82 19799.32 14\n19799.32 14 989.97 20789.28 15\n20789.28 15 while statement is over\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\nbefore entering while's\nbody at the end of while's body\nbalance year interest balance year\n10000.00 0 500.00 10500.00 1\n10500.00 1 525.00 11025.00 2\n11025.00 2 551.25 11576.25 3\n\u2026this process goes on\n11576.25 3 578.81 12155.06 4\nand on \u2026\n12155.06 4 607.75 12762.82 5\n12762.82 5 638.14 13400.96 6\n13400.96 6 670.05 14071.00 7\n14071.00 7 703.55 14774.55 8\n14774.55 8 738.73 15513.28 9\n15513.28 9 775.66 16288.95 10\n16288.95 10 814.45 17103.39 11\n17103.39 11 855.17 17958.56 12\n17958.56 12 897.93 18856.49 13\n18856.49 13 942.82 19799.32 14\n19799.32 14 989.97 20789.28 15\n20789.28 15 while statement is over\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\nbefore entering while's\nbody at the end of while's body\nbalance year interest balance year\n10000.00 0 500.00 10500.00 1\n10500.00 1 525.00 11025.00 2\n11025.00 2 551.25 11576.25 3\n\u2026this process goes on\n11576.25 3 578.81 12155.06 4\nand on \u2026\n12155.06 4 607.75 12762.82 5\n12762.82 5 638.14 13400.96 6\n13400.96 6 670.05 14071.00 7\n14071.00 7 703.55 14774.55 8\n14774.55 8 738.73 15513.28 9\n15513.28 9 775.66 16288.95 10\n16288.95 10 814.45 17103.39 11\n17103.39 11 855.17 17958.56 12\n17958.56 12 897.93 18856.49 13\n18856.49 13 942.82 19799.32 14\n19799.32 14 989.97 20789.28 15\n20789.28 15 while statement is over\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\nbefore entering while's\nbody at the end of while's body\nbalance year interest balance year\n10000.00 0 500.00 10500.00 1\n10500.00 1 525.00 11025.00 2\n11025.00 2 551.25 11576.25 3\n\u2026this process goes on\n11576.25 3 578.81 12155.06 4\nand on \u2026\n12155.06 4 607.75 12762.82 5\n12762.82 5 638.14 13400.96 6\n13400.96 6 670.05 14071.00 7\n14071.00 7 703.55 14774.55 8\n\u2026until the balance is\n14774.55 8 738.73 15513.28 9\nfinally(!) over $20,000 and\n15513.28 9 775.66 16288.95 10\nthe test becomes false.\n16288.95 10 814.45 17103.39 11\n17103.39 11 855.17 17958.56 12\n17958.56 12 897.93 18856.49 13\n18856.49 13 942.82 19799.32 14\n19799.32 14 989.97 20789.28 15\n20789.28 15 while statement is over\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\n15\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProgram Run\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nFlowchart\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nMore while Examples\nFor each of the following, do a hand-trace\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nExample of Normal Execution\nwhile loop to hand-trace trace\n1 i = 3; line i comment\n1 3\nwhile (i > 0)\n2\n2 \u201c condition is true\n{\n3 \u201c print \u201c3 \u201c\n3 cout << i << \" \"; 4 2\ni--;\n4\n}\nreturn 0\n5\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nExample of Normal Execution\nwhile loop to hand-trace trace\n1 i = 3; line i comment\n1 3\nwhile (i > 0)\n2\n2 \u201c condition is true\n{\n3 \u201c print \u201c3 \u201c\n3 cout << i << \" \"; 4 2\n2 \u201c condition is true\ni--;\n4\n3 \u201c print \u201c2 \u201c\n}\n4 1\n5\nreturn 0\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nExample of Normal Execution\nwhile loop to hand-trace trace\n1 i = 3; line i comment\n1 3\nwhile (i > 0)\n2\n2 \u201c condition is true\n{\n3 \u201c print \u201c3 \u201c\n3 cout << i << \" \"; 4 2\n2 \u201c condition is true\ni--;\n4\n3 \u201c print \u201c2 \u201c\n}\n4 1\n5 return 0 2 \u201c condition is true\n3 \u201c print 1\n4 0\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nExample of Normal Execution\nwhile loop to hand-trace trace\n1 i = 3; line i comment\n1 3\nwhile (i > 0)\n2\n2 \u201c condition is true\n{\n3 \u201c print \u201c3 \u201c\n3 cout << i << \" \"; 4 2\n2 \u201c condition is true\ni--;\n4\n3 \u201c print \u201c2 \u201c\n}\n4 1\n5 return 0 2 \u201c condition is true\n3 \u201c print 1\n4 0\n2 \u201c condition is false\n5 \u201c end of program\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nExample of an Infinite Loop\nwhile loop to hand-trace trace\n1 i = 3; line i comment\nwhile (i > 0)\n2\n{\ncout << i << \" \";\n3\ni++;\n4\n}\nreturn 0\n5\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nExample of an Infinite Loop\nwhile loop to hand-trace trace\n1 i = 3; line i comment\n1 3\nwhile (i > 0)\n2\n2 \u201c condition is true\n{\n3 \u201c print \u201c3 \u201c\n3 cout << i << \" \"; 4 4\n2 \u201c condition is true\ni++;\n4\n3 \u201c print \u201c4 \u201c\n}\n4 5\n5 return 0 2 \u201c condition is true\n3 \u201c print \u201c5 \u201c\n4 6\n2 \u201c condition is true\n3 \u201c print \u201c6 \u201c\n4 7\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nExample of an Infinite Loop\nwhile loop to hand-trace trace\n1 i = 3; line i comment\n1 3\nwhile (i > 0)\n2\n2 \u201c condition is true\n{\n3 \u201c print \u201c3 \u201c\n3 cout << i << \" \"; 4 4\n2 \u201c condition is true\ni++;\n4\n3 \u201c print \u201c4 \u201c\n}\n4 5\n5 return 0 2 \u201c condition is true\n3 \u201c print \u201c5 \u201c\n4 6\n2 \u201c condition is true\n3 \u201c print \u201c6 \u201c\n4 7\n2 \u201c condition is true\n3 \u201c print \u201c57\u201c\n4 8\nC++ for Everyone by C2a y Horstm\u201c ann condition is true\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\n3 \u201c print \u201c8 \u201c\n4 7\nExample of an Infinite Loop\nwhile loop to hand-trace trace\n1 i = 3; 4 133\n2 \u201c condition is true\nwhile (i > 0)\n2\n3 \u201c print \u201c133 \u201c\n{\n4 134\n3 cout << i << \" \"; 2 \u201c condition is true\n3 \u201c print \u201c134 \u201c\ni++;\n4\n4 135\n}\n2 \u201c condition is true\n5 return 0 3 \u201c print \u201c135 \u201c\n4 136\n2 \u201c condition is true\n\u2022 Some time later 3 \u201c print \u201c136 \u201c\n4 137\n2 \u201c condition is true\n3 \u201c print \u201c137\u201c\n4 138\n2 \u201c condition is true\nC++ for Everyone by C3a y Horstm\u201c ann print \u201c138 \u201c\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\n4 137\nExample of an Infinite Loop\nwhile loop to hand-trace trace\n1 i = 3; 4 429453\n2 \u201c condition is true\nwhile (i > 0)\n2\n3 \u201c print \u201c429453 \u201c\n{\n4 429454\n3 cout << i << \" \"; 2 \u201c condition is true\n3 \u201c print \u201c429454 \u201c\ni++;\n4\n4 429455\n}\n2 \u201c condition is true\n5 return 0 3 \u201c print \u201c429455 \u201c\n4 429456\n2 \u201c condition is true\n\u2022 Some more time later 3 \u201c print \u201c429456 \u201c\n4 429457\n\u2022 Will this ever stop?\n2 \u201c condition is true\n\u2022 Yes, when you get an overflow. 3 \u201c print \u201c429457\u201c\n4 429458\n\u2022 But that\u2019s not what you want.\n2 \u201c condition is true\nC++ for Everyone by C3a y Horstm\u201c ann print \u201c429458 \u201c\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\n4 429457\nCommon Error \u2013 Infinite Loops\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Infinite Loops\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Infinite Loops\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Infinite Loops\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Infinite Loops\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Infinite Loops\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Infinite Loops\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Infinite Loops\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Infinite Loops\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Infinite Loops\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Infinite Loops\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Infinite Loops\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Infinite Loops\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Infinite Loops\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Infinite Loops\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Infinite Loops\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\n\nAnother infinite loop\nwhile loop to hand-trace trace\n1 i = 3; line i comment\n1 3\nwhile (i > 0);\n2\n2 \u201c condition is true\n{\n2 \u201c condition is true\n3 cout << i << \" \"; 2 \u201c condition is true\n2 \u201c condition is true\ni++;\n4\n2 \u201c condition is true\n}\n2 \u201c condition is true\n5 return 0 2 \u201c condition is true\n2 \u201c condition is true\n2 \u201c condition is true\n2 \u201c condition is true\nThat semicolon causes the while loop to 2 \u201c condition is true\nhave an \u201cempty body\u201d which is executed 2 \u201c condition is true\nforever. \u2026.\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nYet another infinite loop\nwhile loop to hand-trace trace\n1 i = 3; line i comment\n1 3\nwhile (i > 0)\n2\n2 \u201c condition is true\n{\n3 3 print \u201c3 \u201c\n3 cout << i << \" \"; 2 \u201c condition is true\n3 3 print \u201c3 \u201c\n4\n2 \u201c condition is true\n}\n3 3 print \u201c3 \u201c\n5 return 0 2 \u201c condition is true\n3 3 print \u201c3 \u201c\n2 \u201c condition is true\n3 3 print \u201c3 \u201c\nForgetting to update the variable used in 2 \u201c condition is true\nthe condition is common. 3 3 print \u201c3 \u201c\n\u2026.\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Infinite Loops\n\uf0a7 In the investment program, forgetting to update might\nlook like this.\nyear = 1;\nwhile (year <= 20)\n{\nbalance = balance * (1 + RATE / 100);\n}\n\u2022\nThe variable year is not updated in the body\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Are We There Yet?\nWell, are we?\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Are We There Yet?\nWhen doing something repetitive,\nmost of us want to know when we are done.\nFor example, you may think,\n\u201cI want to get at least $20,000,\u201d\nand set the loop condition to\nwhile (balance >= TARGET)\nwrong test\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Are We There Yet?\nBut the while loop thinks the opposite:\nHow long am I allowed to keep going?\nWhat is the correct loop condition?\nwhile (balance < TARGET)\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Are We There Yet?\nBut the while loop thinks the opposite:\nHow long am I allowed to keep going?\nWhat is the correct loop condition?\nwhile (balance < TARGET)\nIn other words:\n\u201cKeep at it while the balance\nis less than the target\u201d.\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nCommon Error \u2013 Are We There Yet?\nWhen writing a loop condition, don\u2019t ask, \u201cAre we there\nyet?\u201d\nThe condition determines how long the loop will keep\ngoing.\nWhen writing a loop condition, ask, \u201cShould we go on?\u201d\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProblem Solving: Hand-Tracing\nHand-tracing is a method of checking your work.\nTo do a hand-trace, write your variables on a sheet of\npaper and mentally execute each step of your code\u2026\nwriting down the values of the variables\nas they are changed in the code.\nKeep track where you are in the program, and what values the\nvariables have \u2013\nthat way you can also see the history of the values.\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nProblem Solving\nLine n sum digit comment\n1 738\n2 \" 0\n3 \" \"\n\uf0a7 Consider this example.\n4 \" \" condition true\nint n = 738;\n1\nint sum = 0;\n2\nint digit;\n3\nwhile(n>0){\n4\ndigit=n % 10;\n5\nsum = sum + digit;\n6\nn = n/10;\n7\n}\n8\ncout << \"Sum: \" << sum;\n9\n\uf0a7 What is the hand trace?\n\uf0a7 What is computed?\n",
  "context": "if statement)\nwhile (condition) The statements are\nrepeatedly executed",
  "source_file": "resources\\Year 1\\CS111 Lectures\\CS111 Lecture 5.2.pdf",
  "line_numbers": [
    147,
    910
  ]
}