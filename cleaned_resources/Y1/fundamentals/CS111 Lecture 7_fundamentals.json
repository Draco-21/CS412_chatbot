{
  "title": "CS111 Lecture 7",
  "language": "cpp",
  "topics": [
    "networking",
    "algorithms",
    "machine_learning",
    "fundamentals"
  ],
  "purpose": "How?",
  "code": "The rand Function\nThe C++ library has a random number generator:\nrand()\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nThe rand Function\nrand is defined in the cstdlib header\nCalling rand yields a random integer\nbetween 0 and RAND_MAX\n(The value of RAND_MAX is implementation dependent)\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nThe rand Function\nCalling rand again yields a different random integer\nVery, very, very rarely it might be the same random\ninteger again.\n(That\u2019s OK. In the real world this happens.)\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nModeling Using the rand Function\nLet\u2019s model a pair of dice,\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nModeling Using the rand Function\none die at a time.\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nModeling Using the rand Function\nWhat are the numbers on one die?\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nModeling Using the rand Function\nNumbers we can work with please!\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nModeling Using the rand Function\nWhat are the bounds of the range of numbers on one die?\n1 and 6 (inclusive)\nWe want a value randomly between those endpoints\n(inclusively)\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nModeling Using the rand Function\n(b - a + 1)\na b\nGiven two endpoints,\na and b, recall there are\n(b - a + 1)\nvalues between a and b,\n(including the bounds themselves).\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nModeling Using the rand Function\n(b - a + 1)\na b\nrand() % (b - a + 1)\nObtain a random value\nbetween 0 and b \u2013 a\nby using the rand() function\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nModeling Using the rand Function\n(b - a + 1)\na b\nStart at a\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nModeling Using the rand Function\n(b - a + 1)\na b\nrand() % (b - a + 1)\nAdd that random value\nto a and you have:\nint d = rand() % (b - a + 1) + a;\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nModeling Using the rand Function\n(b - a + 1)\na b\nrand() % (b - a + 1)\na random value in the range.\nint d = rand() % (b - a + 1) + a;\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nModeling Using the rand Function\nUsing 1 and 6 as the bounds\nand\nmodeling for two dice,\nrunning for 10 tries,\nwe have:\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nModeling Using the rand Function\n#include <iostream>\n#include <string>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\nOne of many different\nint main() Program Runs:\n5 1\n{\n2 1\nsrand(time(0)); 1 2\n5 1\n1 2\nfor (i = 1; i <= 10; i++)\n6 4\n{\n4 4\nint d1 = rand() % 6 + 1;\n6 1\nint d2 = rand() % 6 + 1;\n6 3\ncout << d1 << \" \" << d2 << endl;\n5 2\n}\ncout << endl;\nreturn 0;\n}\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nBob\u2019s program\n\uf0a7 Adding random choice to Bob\u2019s program.\nAlice\u2019s program\n\uf0a7 Adding random guesses to Alices\u2019s program.\nThe rand Function\nrand picks from a very long sequence of numbers\nthat don\u2019t repeat for a long time.\nBut they do eventually repeat.\nThese sorts of \u201crandom\u201d numbers are often called\npseudorandom numbers.\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nThe rand Function\nrand uses only one pseudorandom number sequence\nand it always starts from the same place.\nOh dear\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nThe rand Function\nWhen you run your program again on another day,\nthe call to rand will start with:\nCS111 student: I have\nused random numbers and\nthe same random number!\nit keeps on repeating same\nnumbers for Alice's guess.\nIs it very \u201creal world\u201d to use the same sequence\nover and over?\nNo, but it\u2019s really nice for testing purposes.\nbut\u2026\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nSeeding the rand Function\nYou can \u201cseed\u201d the random generator to indicate\nwhere it should start in the pseudorandom sequence\nCalling srand sets where rand starts\nsrand is defined in the cstdlib header\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nSeeding the rand Function\nBut what value would be different every time\nyou run your program?\n(hint)\nHow about the time?\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nSeeding the rand Function\nYou can obtain the system time.\ntime(0)\nCalling gets the current time\nNote the zero. It is required.\ntime is defined in the time header\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nSeeding the rand Function\nCalling srand sets where rand starts.\nCalling time(0) gets the current time.\nSo, to set up for \u201creally, really random\u201d\nrandom numbers on each program run:\nsrand(time(0)); // seed rand()\n(Well, as \u201creally random\u201d as we can hope for.)\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved\nQuiz\n\uf0a7 What gives you a random number?\nQuiz\n\uf0a7 What gives you a random number between a and b?\nQuiz\n\uf0a7 What do you need to do to get a different random\nnumber each time you run?\n",
  "context": "How?\nC++ for Everyone by Cay Horstmann\nCopyright \u00a9 2012 by John Wiley & Sons. All rights reserved",
  "source_file": "resources\\Year 1\\CS111 Lectures\\CS111 Lecture 7.pdf",
  "line_numbers": [
    61,
    253
  ]
}