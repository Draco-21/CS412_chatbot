{
  "title": "android_studios",
  "language": "cpp",
  "topics": [
    "machine_learning",
    "web_dev",
    "fundamentals",
    "algorithms",
    "data_structures",
    "networking",
    "database"
  ],
  "purpose": "nameonephone\u201c9999-C-RC\u201dfortheRobotControllerandtheotherphone\u201c9999-C-DS\u201dfortheDRIVERSTATION.The\u201c-C\u201d indicatesthatthesedevicesbelongtothethirdsetofphonesforthisteam.",
  "code": "attheManagepagefromtheRCapp,apairedDSapp,oraconnectedlaptop;clickApply Wi-Fi Settingswhendone.\nThenameofaDRIVERSTATIONdevicecanbechangedintheDSapp,usinginstructionsfoundhere.\nAsanalternate,thedevicenamescanbechangedattheAndroidsystemlevel,asdescribedbelow.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,18\nNote: Itwilltakeanestimated5minutesperphonetocompletethistask.\nStep Image\n1. Browsethelistofavailableappsonthesmartphone\nand locate the Settings icon. Click on Settings icon\ntodisplaytheSettingsscreen.\ncontinuesonnextpage\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,19\nTable 1\u2013continuedfrompreviouspage\n2. ClickonWi-FitolaunchtheWi-Fiscreen.\ncontinuesonnextpage\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,20\nTable 1\u2013continuedfrompreviouspage\n3. Touch the three vertical dots to display a pop-up\nmenu.\ncontinuesonnextpage\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,21\nTable 1\u2013continuedfrompreviouspage\n4. SelectAdvancedfromthepop-upmenu.\ncontinuesonnextpage\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,22\nTable 1\u2013continuedfrompreviouspage\n5. SelectWi-FiDirectfromtheAdvancedWi-Fiscreen.\n6. Touch the three vertical dots to display a pop-up\nmenu.\ncontinuesonnextpage\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,23\nTable 1\u2013continuedfrompreviouspage\n7. SelectConfigureDevicefromthepop-upmenu.\ncontinuesonnextpage\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,24\nTable 1\u2013continuedfrompreviouspage\n8. Usetouchpadtoenternewnameofdevice. Ifthede-\nvicewillbeaRobotController,specifyyourteamnum-\nberand-RC.IfthedevicewillbeaDRIVERSTATION,\nspecifyyourteamnumberand-DS.Youcanalsoset\ntheWi-FiDirectinactivitytimeouttoNeverdisconnect\nand then hit the SAVE button to save your changes.\nNote that in the screenshot shown to the right, the\nteamnumberis9999. The\u201c-C\u201dindicatesthatthisis\nfromthethirdpairofsmartphonesforthisteam. The-\nRCindicatesthatthisphonewillbeaRobotController.\n9. Afterrenamingyourphone,powercyclethedevice.\n2.1.3 InstallingtheFIRST TechChallengeApps\nFordetailedinstructionsonhowtoinstallandupdateapps,pleaseseetheseotherpages:\nROBOTCONTROLLERapp\nDRIVERSTATIONapp\nAsof2021,theSDKapps(v6.1andhigher)arenolongeravailableonGooglePlay.\nTheREVHardwareClientsoftwarewillallowyoutodownloadtheappstodevices: REVRoboticsControlHub,REVRobotics\nExpansionHub,REVRoboticsDriverHub,andotherapprovedAndroiddevices(seesectionbelow,calledUpdatingAppson\nAndroidPhones). Herearesomeofthebenefits:\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,25\n\u2022 ConnecttoaREVRoboticsControlHubviaWiFi.\n\u2022 OneClickupdateofallsoftwareonconnecteddevices.\n\u2022 Pre-downloadsoftwareupdateswithoutaconnecteddevice.\n\u2022 BackupandrestoreuserdatafromControlHub.\n\u2022 InstallandswitchbetweenDSandRCapplicationsonAndroidDevices.\n\u2022 AccesstheRobotControlConsoleontheControlHub.\nTheappreleasesarealsoavailableontheFtcRobotControllerGitHubrepository. Itispossibleto\u201cside-load\u201dtheappsonto\nthe Robot Controller (RC) and Driver Station (DS) phones. However, this section of the document does not include such\ninstructions;otherdocumentpagesdescribeside-loadingtheRCappandtheDSapp.\nUpdating Apps and Firmware on REV Robotics Devices (REV Robotics Expansion Hub, REV Robotics Control Hub, REV\nRoboticsDriverHub)\nTheREVHardwareClientsoftwareisusedtoinstallandupdateapps,firmwareand/oroperatingsystemsondevicesfrom\nREVRobotics. SimplyconnectthedeviceviaUSBtoyourPCwiththeREVHardwareClientinstalledandrunning, andthe\nsoftwarewilldetectconnectedhardware. Afterdetection,theREVHardwareClientcanthenupdatetheRobotController(RC)\napponaREVRoboticsControlHub,updatetheDriverStation(DS)apponaREVRoboticsDriverHub,orupdatefirmware.\nUpdatingAppsonAndroidPhones\nTheREVHardwareClientsoftwareisusedtoinstall, uninstall, andupdateappsonAndroidphones. However, thephones\nmusthaveDeveloperOptionsenabledinorderforthephonetobeproperlyrecognizedandupdatedbytheREVHardware\nClientsoftware. TheprocessforenablingDeveloperOptionsisasfollows:\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,26\nStep Image\n1. Go to \u201cSettings\u201d, then tap \u201cAbout device\u201d or \u201cAbout\nphone\u201d.\ncontinuesonnextpage\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,27\nTable 2\u2013continuedfrompreviouspage\nStep Image\n2. Scrolldown,thentapBuildnumberseventimes. De-\npending on your device and operating system, you\nmayneedtotapSoftwareinformation,thentapBuild\nnumberseventimes.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\ncontinuesonnextpage\nFTCDocs AndroidStudioGuide,28\nTable 2\u2013continuedfrompreviouspage\nStep Image\n3. Enteryourpattern,PINorpasswordtoenabletheDe-\nveloperoptionsmenu.\n4. The\u201cDeveloperoptions\u201dmenuwillnowappearinyour\nSettingsmenu. Dependingonyourdevice,itmayap-\npearunderSettings>General>Developeroptions.\ncontinuesonnextpage\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,29\nTable 2\u2013continuedfrompreviouspage\nStep Image\n5. TodisabletheDeveloperoptionsatanytime, tapthe\nswitch.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,30\n2.1.4 PlacingPhonesintoAirplaneModewithWi-FiOn\nFortheFIRSTTechChallengecompetitions,itisimportantthatyouplaceyourRobotControllerandDRIVERSTATIONdevices\ninto Airplane mode but keep their Wi-Fi radios turned on. This is important because you do not want any of the cellular\ntelephonefunctionstobeenabledduringamatch. Thecellulartelephonefunctionscoulddisruptthefunctionoftherobot\nduringamatch.\nNote: Itwilltakeanestimated2.5minutesperphonetocompletethistask. Alsonotethatthescreensdisplayedonyour\nAndroiddevicesmightdifferslightlyfromtheimagescontainedinthisdocument.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,31\nStep Image\n1. On the main Android screen of each smartphone,\nuse your finger to slide from the top of the screen\ndown towards the bottom ofthe screen to display\nthe quick configuration screen. Note that for some\nsmartphones you might have to swipe down more\nthan once to display the quick configuration screen,\nparticularlyiftherearemessagesornotificationsdis-\nplayedatthetopofyourscreen. LookfortheAirplane\nmodeicon(whichisshapedlikeanairplane)andifthe\niconisnotactivated,touchtheicontoputthephone\nintoairplanemode.\n2. Placing the phone into airplane mode will turn off\nthe Wi-Fi radio. If the Wi-Fi icon has a diagonal line\nthrough it (see Step 1 above), then the Wi-Fi radio is\ndisabled. YouwillneedtotouchtheWi-Fiicononthe\nquickconfigurationscreentoturntheWi-Firadioback\non.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,32\n2.1.5 PairingtheDRIVERSTATIONtotheRobotController\nControlHubPairing\nTheREVRoboticsControlHubshouldcomewiththeRobotControllerapppre-installed. Onceyouhavesuccessfullyinstalled\ntheDriverStationonanAndroidphone,youwillwanttoestablishasecurewirelessconnectionbetweentheControlHuband\ntheDRIVERSTATION.ThisconnectionwillallowyourDRIVERSTATIONdevicetoselectopmodesonyourRobotController\nandsendgamepadinputtotheseprograms. Likewise,itwillallowyouropmodesrunningonyourRobotControllertosend\ntelemetrydatatoyourDRIVERSTATIONphonewhereitcanbedisplayedforyourdrivers. Theprocesstoconnectthetwo\ndevicesisknownas\u201cpairing.\u201d\nNote: theControlHubdoesnothaveitsowninternalbattery. BeforeyoucanconnectaDriverStationtotheControlHub,\nyoumustconnecttheControlHubtoa12Vbattery.\nAlsonotethatitwilltakeanestimated10minutestocompletethistask.\nStep Image\n1. Connectanapproved12Vbatterytothepowerswitch\n(REV-31-1387)andmakesuretheswitchisintheoff\nposition. ConnecttheswitchtoanXT30portonthe\nControlHubandturntheswitchon. TheLEDshould\ninitiallybeblueontheControlHub.\ncontinuesonnextpage\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,33\nTable 3\u2013continuedfrompreviouspage\nStep Image\n2. Ittakesapproximately18secondsfortheControlHub\ntopoweron. TheControlHubisreadytopairwiththe\nDriver Station when the LED turns green. Note: the\nlightblinksblueevery~5secondstoindicatethatthe\nControlHubishealthy.\n3. On the Driver Station device, browse the available\nappsandlocatetheFTCDriverStationicon. Tapon\nthe icon to launch the Driver Station app. Note that\nthefirsttimeyoulaunchtheappyourAndroiddevice\nmight prompt you for permissions that the app will\nneed torun properly. Whenever prompted, press Al-\nlowtogranttherequestedpermission.\ncontinuesonnextpage\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,34\nTable 3\u2013continuedfrompreviouspage\nStep Image\n4. Touchthethreeverticaldotsontheupperrighthand\ncorner of the main screen of the Driver Station app.\nThiswilllaunchapop-upmenu.\ncontinuesonnextpage\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,35\nTable 3\u2013continuedfrompreviouspage\nStep Image\n5. SelectSettingsfromthepop-upmenu.\ncontinuesonnextpage\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,36\nTable 3\u2013continuedfrompreviouspage\nStep Image\n6. FromtheSettingsscreen,lookforandselectPairing\nMethodtolaunchthePairingMethodscreen.\ncontinuesonnextpage\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,37\nTable 3\u2013continuedfrompreviouspage\nStep Image\n7. Touch the words Control Hub to indicate that this\nDRIVERSTATIONwillbepairingwithaControlHub.\ncontinuesonnextpage\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,38\nTable 3\u2013continuedfrompreviouspage\nStep Image\n8. FromtheSettingsscreen,lookforandselectPairwith\nRobotControllertolaunchthe PairwithRobotCon-\ntrollerscreen.\ncontinuesonnextpage\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,39\nTable 3\u2013continuedfrompreviouspage\nStep Image\n9. From Pair with Robot Controller screen,look for and\npresstheWifiSettingsbuttontolaunchthedevice\u2019s\nAndroidWifiSettingsscreen.\ncontinuesonnextpage\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,40\nTable 3\u2013continuedfrompreviouspage\nStep Image\n10. FindthenameofyourControlHub\u2019swirelessnetwork\nfromthelistofavailableWiFinetworks. Clickonthe\nnetwork name to select the network. If this is the\nfirsttimeyouareconnectingtotheControlHub,then\nthedefaultnetworknameshouldbeginwiththepre-\nfixFTC-(FTC-1Ybrinthisexample). Thedefaultnet-\nworkname should be listed on a stickerattached to\nthebottomsideoftheControlHub.\ncontinuesonnextpage\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,41\nTable 3\u2013continuedfrompreviouspage\nStep Image\n11. Whenprompted,specifythepasswordfortheControl\nHub\u2019sWiFinetworkandpressConnecttoconnectto\ntheHub. NotethatthedefaultpasswordfortheCon-\ntrolHubnetworkispassword. Alsonotethatwhen\nyou connect to the Control Hub\u2019s WiFi network suc-\ncessfully, the DRIVER STATION will not have access\ntotheInternet.\ncontinuesonnextpage\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,42\nTable 3\u2013continuedfrompreviouspage\nStep Image\n12. AfteryousuccessfullyconnectedtotheHub,usethe\nback arrow to navigate to the previous screen. You\nshouldseethenameoftheWiFinetworklistedunder\n\u201cCurrent Robot Controller:\u201d. Use the back-arrow key\ntoreturntotheSettingsscreen. Thenpresstheback-\narrowkeyonemoretimetoreturntothemainDRIVER\nSTATIONscreen.\ncontinuesonnextpage\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,43\nTable 3\u2013continuedfrompreviouspage\nStep Image\n13. VerifythattheDRIVERSTATIONscreenhaschanged\nand that it now indicates that it is connected to the\nControlHub. ThenameoftheControlHub\u2019sWiFinet-\nwork(FTC-1Ybrinthisexample)shouldbedisplayed\nintheNetworkfieldontheDriverStation.\nTwoAndroidSmartphonePairing\nImportant: If your DRIVER STATION was previously paired to a Control Hub, and you currently would like to connect to\nanAndroidsmartphoneRobotController, thenbeforeattemptingtopairtotheRobotController, youshouldforgettheWi-\nFinetworkforthepreviousControlHub(usingtheAndroidWifiSettingsscreenontheDRIVERSTATION)andthenpower\ncycletheDRIVERSTATIONphone. IfthepreviousControlHubispoweredonandifyouhaven\u2019tforgottenthisnetwork,then\nthe DRIVER STATION might try and connect to the Control Hub and might be unable to connect to the Robot Controller\nsmartphone.\nOnceyouhavesuccessfullyinstalledtheappsontoyourAndroidphones,youwillwanttoestablishasecurewirelesscon-\nnectionbetweenthetwodevices. ThisconnectionwillallowyourDRIVERSTATIONdevicetoselectopmodesonyourRobot\nControllerphoneandsendgamepadinputtotheseprograms. Likewise,itwillallowyouropmodesrunningonyourRobot\nController phone to send telemetry data to your DRIVER STATION device where it can be displayed for your drivers. The\nprocesstoconnectthetwophonesisknownaspairing.\nNotethatitwilltakeanestimated10minutestocompletethistask.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,44\ncontinuesonnextpage\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,45\nTable 4\u2013continuedfrompreviouspage\nStep Image\nStep Image\n1. OntheRobotControllerdevice,browsetheavailable\nappsandlocatethe FTCRobot Controller icon. Tap\nontheicontolaunchtheRobotControllerapp. Note\nthatthefirsttimeyoulaunchtheappyourAndroidde-\nvice might prompt you for permissions that the app\nwillneedtorunproperly. Wheneverprompted,press\nAllowtogranttherequestedpermission.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindnecsosn-tinItu\u2019sewshoantnmeaxtkepsage\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,46\nTable 4\u2013continuedfrompreviouspage\nStep Image\n2. Verify that the Robot Controller app is running. The\nRobotStatusfieldshouldreadrunningifitisworking\nproperly.\ncontinuesonnextpage\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,47\nTable 4\u2013continuedfrompreviouspage\nStep Image\n3. OntheDRIVERSTATIONdevice,browsetheavailable\nappsandlocatetheFTCDriverStationicon. Tapon\nthe icon to launch the Driver Station app. Note that\nthefirsttimeyoulaunchtheappyourAndroiddevice\nmight prompt you for permissions that the app will\nneed torun properly. Whenever prompted, press Al-\nlowtogranttherequestedpermission.\ncontinuesonnextpage\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,48\nTable 4\u2013continuedfrompreviouspage\nStep Image\n4. Touchthethreeverticaldotsontheupperrighthand\ncorner of the main screen of the Driver Station app.\nThiswilllaunchapop-upmenu.\ncontinuesonnextpage\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,49\nTable 4\u2013continuedfrompreviouspage\nStep Image\n5. SelectSettingsfromthepop-upmenu.\ncontinuesonnextpage\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,50\nTable 4\u2013continuedfrompreviouspage\nStep Image\n6. FromtheSettingsscreen,lookforandselectPairing\nMethodtolaunchthePairingMethodscreen.\ncontinuesonnextpage\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,51\nTable 4\u2013continuedfrompreviouspage\nStep Image\n7. Verify that the Wifi Direct mode is selected, which\nmeansthatthisDRIVERSTATIONwillbepairingwith\nanotherAndroiddevice.\ncontinuesonnextpage\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,52\nTable 4\u2013continuedfrompreviouspage\nStep Image\n8. FromtheSettingsscreen,lookforandselectPairwith\nRobotControllertolaunchthe PairwithRobotCon-\ntrollerscreen.\ncontinuesonnextpage\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,53\nTable 4\u2013continuedfrompreviouspage\nStep Image\n9. Find the name of your Robot Controller from the list\nandselectit. Afteryouhavemadeyourselection,use\nthe back-arrow key to return to the Settings screen.\nThen press the back-arrow key one more time to re-\nturntothemainDRIVERSTATIONscreen.\ncontinuesonnextpage\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,54\nTable 4\u2013continuedfrompreviouspage\nStep Image\n10. WhentheDRIVERSTATIONreturnstoitsmainscreen,\nthefirsttimeyouattempttoconnecttotheRobotCon-\ntrollerapromptshouldappearontheRobotController\nscreen. Click on the ACCEPT button to accept the\nconnectionrequestfromtheDRIVERSTATION.\ncontinuesonnextpage\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,55\nTable 4\u2013continuedfrompreviouspage\nStep Image\n11. VerifythattheDRIVERSTATIONscreenhaschanged\nand that it now indicates that it is connected to the\nRobotController. ThenameoftheRobotController\u2019s\nremote network (9999-C-RC in this example) should\nbedisplayedintheNetworkfieldontheDRIVERSTA-\nTION.\ncontinuesonnextpage\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,56\nTable 4\u2013continuedfrompreviouspage\nStep Image\n12. Verify that the Robot Controller screen has changed\nand that it now indicates that it is connected to the\nDRIVERSTATION.TheNetworkstatusshouldreadac-\ntive,connectedontheRobotController\u2019smainscreen.\n2.2 Connecting Devices To a Control or Expansion Hub\nThissectionexplainshowtoconnectamotor,aservo,andsomesensorstoyourREVRoboticsControlHuborREVRobotics\nExpansionHub. WhiletheControlHubdiffersfromtheExpansionHubbecauseofitsbuiltinAndroiddevice,thelayoutof\ntheexternalmotor,servo,andsensorportsareidenticalfortheControlHubandExpansionHub.\nThe images in this section use an Expansion Hub to demonstrate how to connect the devices. The process, however, is\nidenticalforaControlHub.\nWhentheinstructionsinthissectionusetheword\u201cHub\u201d,theyarereferringtoaControlHuborExpansionHub.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,57\n2.2.1 Connecting12VPowertotheHub\nTheHubdrawspowerfroma12Vrechargeablebattery. Forsafetyreasons,thebatteryhasa20Afusebuiltin. Amechanical\nswitchisusedtoturnon/turnoffthepower.\nNotethatitwilltakeanestimated5minutestocompletethistask.\nConnecting12VPowertotheHubInstructions\n1. Ifyour12VbatteryhasaTamiyastyleconnector,connecttheTamiyatoXT30adaptercabletothematchingendofthe\nswitchcable.\nNote: Donotconnectthe12VbatterytotheTamiyaadapteryet. Wewillconnectthebatteryduringalaterstep.\n2. ConnecttheotherendoftheswitchcabletoamatchingXT30portontheHub.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,58\n3. VerifythattheswitchisintheOFFposition.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,59\n4. Connectthe12VbatterytotheTamiyatoXT30cable.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,60\n5. TurnontheswitchandverifythattheHubisdrawingpowerfromthebattery. NotethattheHub\u2019sLEDshouldbeilluminated\n(noticetheblueLEDinupperright-handcorneroftheHubintheimagebelow).\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,61\n6. TurnofftheswitchandverifythattheHubisoff. NotethattheHub\u2019sLEDshouldnotbeilluminated.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,62\n2.2.2 ConnectingaMotortotheHub\nTheHubcandriveuptofour(4)12VDCmotorsperHub. TheHubusesatypeofelectricalconnectorknownasa2-pinJST\nVHconnector. ManyoftheFIRST-approved12VDCmotorsareequippedwithAndersonPowerpoleconnectors. Anadapter\ncablecanbeusedtoconnecttheAndersonPowerpoleconnectorstotheHubmotorport(seeFIRSTTechChallengeRobot\nWiringGuideformoreinformation).\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,63\nFortheexamplesinthistutorial,FIRSTrecommendsthattheuserbuildasimplerigtosecurethemotorinplaceandprevent\nitfrommovingaboutduringthetestruns. TheimageaboveshowsaTetrixmotorinstalledinarigbuiltwithaTetrixmotor\nmountandsomeTetrixC-channels. Agearwasmountedonthemotorshafttomakeiteasierfortheusertoseetherotation\noftheshaft.\nNotethatitwilltakeanestimated2.5minutestocompletethistask.\nConnectinga12VMotortotheHubInstructions\n1. ConnecttheAndersonPowerpoleendofthemotor\u2019spowercabletothePowerpoleendoftheAndersontoJSTVHadapter\ncable.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,64\n2. ConnecttheotherendoftheAndersontoJSTVHadaptercableintothemotorportlabeled\u201c0\u201dontheHub.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,65\n2.2.3 ConnectingaServototheHub\nTheHubhas6built-inservoports. Theservoportsacceptthestandard3-wireheaderstyleconnectorscommonlyfoundon\nservos. Notethatgroundpinisontheleftsideoftheservoport.\nNotethatitwilltakeanestimated2.5minutestocompletethistask.\nConnectingaServototheHubInstructions\n1. Connecttheservocabletotheservoportlabeled\u201c0\u201dontheHub. Notethatthegroundpinisontheleftsideoftheservo\nport.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,66\n2. Verifythattheblackgroundwireoftheservocablematchesthegroundpinoftheservoport(whichisalignedontheleft\nsideoftheport).\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,67\n2.2.4 ConnectingaColor-DistanceSensortotheHub\nTheHubhas4independentI2Cbuses. EachbushasitsownportontheHub. WewillconnectaREVRoboticsColor-Distance\nsensortotheI2Cbus#0ontheHub.\nNotethatitwilltakeanestimated2.5minutestocompletethistask.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,68\nConnectingaColor-DistanceSensortotheHubInstructions\n1. Connectoneendofthe4-pinJSTPHcabletotheREVRoboticsColor-Distancesensor.\n2. Plugtheotherendofthe4-pinJSTPHcabletotheI2Cportlabeled\u201c0\u201dontheHub.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,69\n2.2.5 ConnectingaTouchSensortotheHub\nTheHubhas4independentdigitalinput/output(I/O)ports. EachporthastwodigitalI/Opinsforatotalof8digitalI/Opins\nonaHub. YouwillconnectaREVRoboticsTouchsensortooneofthedigitalI/Oports.\nNotethatinthecaseoftheREVRoboticsTouchSensor,thedevicehasaconnectorportfora4-pinsensorcable. However,\nthedeviceonlyneedstoconnecttooneofthetwoavailabledigitalI/Opins. FortheREVRoboticsTouchSensor,thesecond\ndigitalI/OpinintheportistheonethatgetsconnectedwhenastandardREVRobotics4-pinJSTPHcableisused. Forthe\n\u201c0-1\u201dport,itisthepinlabeled\u201c1\u201dthatgetsconnectedthroughthe4-pincable. Similarly,forthe\u201c2-3\u201dport,itisthepinlabeled\n\u201c3\u201dthatgetsconnectedthroughthe4-pincable.\nNotethatitwilltakeanestimated2.5minutestocompletethistask.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,70\nConnectingaTouchSensortotheHubInstructions\n1. Connectoneendofthe4-pinJSTPHcabletotheREVRoboticsTouchsensor.\n2. Plugtheotherendofthe4-pinJSTPHcabletodigitalI/Oportlabeled\u201c0\u201dontheHub.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,71\n2.3 Configuring Your Hardware\nThis page contains information on configuring your control system hardware such that you may use them in your own\nprojects.\n2.3.1 GettingStarted\nCreatingaConfiguration\nBeforeyoucancommunicatewiththemotor,servoandsensorsthatareconnectedtotheControlHuborExpansionHub,\nyoufirstmustcreateaconfigurationfileonyourRobotController,sothattheRobotControllerwillknowwhathardwareis\navailableontheControlHub\u2019sorExpansionHub\u2019sexternalports.\nGettingtheControlHubReady\nIfyouareusingaControlHub,youdonotneedtomakeanyadditionalconnections. Yousimplyneedtomakesurethatthe\nControlHubispoweredonandpairedtotheDRIVERSTATION.\nConnectinganAndroidSmartphonetoanExpansionHub\nIfyouareusinganAndroidsmartphoneasaRobotController,youmustphysicallyconnecttheRobotControllersmartphone\ntotheExpansionHubusingaUSBcableandanOn-The-Go(OTG)adapter. Also,youshouldverifythattheDRIVERSTATION\niscurrentlypairedtotheRobotController.\nConnectinganAndroidSmartphonetoanExpansionHubInstructions\n1. PowerontheExpansionHubbyturningonthepowerswitch.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,72\n2. PlugtheTypeBMiniendoftheUSBcableintotheUSBminiportontheExpansionHub.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,73\n3. PlugtheTypeAendoftheUSBcableintotheOTGadapter.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,74\n4. VerifythatyourRobotControllersmartphoneispoweredonandunlocked. PlugintheUSBMicroOTGadapterintothe\nOTGportoftheRobotControllerphone.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,75\nNotethatwhentheOTGadapterispluggedintothesmartphone,thephonewilldetectthepresenceoftheExpansionHub\nandlaunchtheRobotControllerapp.\n5. ThefirsttimeyouconnecttheRobotControllersmartphonetotheExpansionHub,theAndroidoperatingsystemshould\nprompt you to ask if it is OK to associate the newly detected USB device (which is the Expansion Hub) with the Robot\nControllerapp.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,76\nImportant: YoumightbepromptedmultipletimestoassociatetheUSBhardwarewiththeRobotController. Wheneveryou\narepromptedbyyourphonewiththismessage,youshouldalwaysselectthe\u201cUsebydefaultforthisUSBdevice\u201doptionand\nhitthe\u201cOK\u201dbuttontoassociatetheUSBdevicewiththeRobotControllerapp. Ifyoufailtomakethisassociation,thenthe\nRobotControllerappmightnotreliablyconnecttothisExpansionHubthenexttimeyouturnyoursystemon.\nCreatingaConfigurationFileUsingtheDRIVERSTATION\nAlthoughtheconfigurationfileneedstoresideontheRobotController,forthistutorialwewillusetheDRIVERSTATIONapp\ntocreatetheconfigurationfileremotely. TheDRIVERSTATIONcanbeusedtocreateaconfigurationfileforaControlHub\norforanAndroidsmartphoneRobotController.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,77\nCreatingaConfigurationFileontheRobotControllerusingtheDRIVERSTATIONInstructions\n1. TouchthethreeverticaldotsintheupperrighthandcorneroftheDriverStationapp. Thiswilllaunchapop-upmenu.\n2. SelectConfigureRobotfromthepopupmenutodisplaytheConfigurationscreen.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,78\n3. IfyourRobotControllerdoesnothaveanyexistingconfigurationfiles,thescreenwilldisplayamessageindicatingthat\nyouneedtocreateafilebeforeproceeding.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,79\nHittheNewbuttontocreateanewconfigurationfileforyourRobotController.\n4. Whenthenewconfigurationscreenappears,theRobotControllerappwilldoascanoftheserialbustoseewhatdevices\nareconnectedtotheRobotController.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,80\nItwilldisplaythedevicesthatitfoundinalistunderneaththewords\u201cUSBDevicesinconfiguration.\u201d Youshouldseeanentry\nthatsayssomethinglike\u201cExpansionHubPortal1\u201dinthelist.\nYour Expansion Hub is listed as a Portal because it is directly connected to the Robot Controller phone through the USB\ncableorinthecaseoftheControlHubthroughtheinternalserialbus.\nIfyoudonotseeyourExpansionHubPortallistedandyouareusingasmartphoneasaRobotController,checkthewired\nconnectionstomakesuretheyaresecureandthenpresstheScanbuttononeortwotimesmoretoseeifthesmartphone\ndetectsthedeviceonare-scanoftheUSBbus.\n5. TouchthePortallisting(\u201cExpansionHubPortal1\u201dinthisexample)todisplaywhatExpansionHubsareconnectedthrough\nthisPortal.\nSinceweonlyhaveasingleExpansionHubconnected,weshouldonlyseeasingleExpansionHubconfigured(\u201cExpansion\nHub2\u201dinthisexample).\n6. TouchtheExpansionHublisting(\u201cExpansionHub2\u201dinthisexample)todisplaytheInput/Outputportsforthatdevice.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,81\nThescreenshouldchangeandlistallthemotor,servoandsensorportsthatareavailableontheselectedExpansionHub.\n2.3.2 ConfiguringaDCMotor\nNowthatyou\u2019vecreatedafile,youwillneedtoaddaDCMotortotheconfigurationfile.\nImportant: Atthispoint,althoughyouhavecreatedyourconfigurationfile,youhavenotyetsaveditscontentstotheRobot\nController. YouwillsavetheconfigurationfilelaterintheSavingtheConfigurationInformationstep.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,82\nConfiguringaDCMotorInstructions\n1. TouchthewordMotorsonthescreentodisplaytheMotorConfigurationscreen.\n2. Sinceweinstalledourmotorontoport#0oftheExpansionHub,usethedropdowncontrolforport0toselectthemotor\ntype(TetrixMotorforthisexample).\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,83\n3. Usethetouchscreenkeypadtospecifyanameforyourmotor(\u201cmotorTest\u201dinthisexample).\n4. PresstheDonebuttontocompletethemotorconfiguration. Theappshouldreturntothepreviousscreen.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,84\n2.3.3 ConfiguringaServo\nYouwillalsowanttoaddaservototheconfigurationfile. Inthisexample,youareusingastandard180-degreeservo.\nConfiguringaServoInstructions\n1. TouchonthewordServosonthescreentodisplaytheServoConfigurationscreen.\n2. Usethedropdowncontroltoselect\u201cServo\u201dastheservotypeforport#0.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,85\n3. Usethetouchpadtospecifythenameoftheservo(\u201cservoTest\u201dforthisexample)forport#0.\n4. PresstheDonebuttontocompletetheservoconfiguration. Theappshouldreturntothepreviousscreen.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,86\n2.3.4 ConfiguringaColorDistanceSensor\nTheREVRoboticsColorDistanceSensorisanI2Csensor. Itactuallycombinestwosensorfunctionsintoasingledevice. It\nisacolorsensor,thatcandeterminethecolorofanobject. Itisalsoadistanceorrangesensor,thatcanbeusedtomeasure\nshortrangedistances. Notethatinthistutorial,theword\u201cdistance\u201disusedinterchangeablywiththeword\u201crange\u201d.\nConfiguringaColorDistanceSensorInstructions\n1. TouchthewordsI2CBus0onthescreentolaunchtheI2CconfigurationscreenforthisI2Cbus.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,87\nThe Control Hub or Expansion Hub has four independent I2C buses, labeled \u201c0\u201d through \u201c3\u201d. In this example, since you\nconnectedtheColorSensortotheportlabeled\u201c0\u201d,itresidesonI2CBus0.\n2. LookattheI2CBus0screen. Thereshouldalreadybeasensorconfiguredforthisbus. TheControlHuborExpansion\nHubhasitsownbuilt-ininertialmeasurementunit(IMU)sensor. Thissensorcanbeusedtodeterminetheorientationofa\nrobot,aswellasmeasuretheaccelerationsonarobot.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,88\nThe built-in IMU is internally connected to I2C Bus 0 on each Control Hub or Expansion Hub. Whenever you configure a\nControlHuborExpansionHubusingtheRobotController,theappautomaticallyconfigurestheIMUforI2CBus0. Youwill\nneedtoaddanotherI2Cdeviceforthisbustobeabletoconfigurethecolorsensor.\n3. PresstheAddbuttontoaddanotherI2Cdevicetothisbus.\n4. Select\u201cREVColor/RangeSensor\u201dfromthedropdownselectorforthisnewdevice. Usethetouchscreenkeyboardtoname\nthisdevice\u201csensorColorRange\u201d.\n5. PresstheDonebuttontocompletetheI2Csensorconfiguration. Theappshouldreturntothepreviousscreen.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,89\n2.3.5 ConfiguringaDigitalTouchSensor\nTheREVRoboticsTouchSensorisadigitalsensor. AnOpModecanquerytheTouchSensortoseeifitsbuttonisbeing\npressedornot.\nConfiguringaDigitalTouchSensorInstructions\n1. TouchthewordsDigitalDevicesonthescreentolaunchtheDigitalI/Oconfigurationscreen.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,90\n2. Usethetouchscreentoadda\u201cREVTouchSensor\u201dforport#1andnamethedevice\u201ctestTouch\u201d.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,91\nNoticethatweareconfiguringtheTouchSensoronport#1insteadofport#0. ThisisbecausewhentheREVRoboticsTouch\nSensorisconnectedtoadigitalportusingastandard4-wireJSTsensorcable,itistheseconddigitalpinthatisconnected.\nThefirstpinremainsdisconnected.\n3. PresstheDonebuttontoreturntothepreviousscreen.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,92\n2.3.6 ConfiguringanExternalWebcamwithaControlHub\nIntroduction\nTheCompetitionManualallowstheuseofUSBVideoClass(UVC)compatiblecamerasforcomputervision-relatedtasks.\nSeeruleR715forthefulldetails. IfyouareusingaREVRoboticsControlHub,thenyouwillneedtouseanexternalwebcam,\nsincetheControlHubdoesnotincludeabuilt-incamera. Thisdocumentdescribeshowtoconnect,configureandusean\nexternalwebcamwithaControlHub.\nSpecialthankstoChrisJohannesenofWestsideRobotics(LosAngeles)forputtingtogetherthisdocumentation.\nTypeofExternalCamera\nTheoretically, any USB Video Class (UVC) camera should work with the system. However, FIRST recommends using UVC\nwebcamerasfromLogitech. ThefollowingcamerashavebeentestedandcalibratedtoworkaccuratelywithSDKsoftware:\n\u2022 LogitechC270HDWebcam\n\u2022 LogitechC310HDWebcam\n\u2022 LogitechC920HDWebcam\nCalibratingaUVCcameraisanoptional,advancedtask. Instructionsforcreatingacalibrationfileareinthecommentsof\ntheteamwebcamcalibrations.xmlfileintheftc_appprojectfolder(visitthislinkforanonlinecopyofthefile).\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,93\nConnectingtheCamera\nThe UVC camera plugs directly into the USB 2.0 port on the REV Control Hub. Unlike the REV Expansion Hub, there is no\nneedforanexternalpoweredUSBhub.\nCameraConfiguration\nBeforeusingtheexternalcamera,itmustbeaddedtotheactiveconfigurationfileasaUSB-connecteddevice.\nUsetheConfigureRobotmenuitemonthepairedDRIVERSTATIONdevicetoaddthewebcamasaUSB-connecteddevice\ntoanexistingornewlycreatedconfigurationfile. NotethattheScanoperationfortheConfigureRobotactivityshoulddetect\nthewebcamandgiveitadefaultnameof\u201cWebcam1\u201d.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,94\nYoucankeepthisdefaultname(thesampleOpModesreferencethisname)orchangeit. Ifyouchangethewebcamname,\nmakesureyourOpModesrefertothisnewname.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,95\nSampleOpModes\nWhentheconfigurationhasbeensavedandactivated,theexternalUVCcameracanbeprogrammedforrobotvisiontasks.\nTheSDKsoftwareoffers\u201cwebcam\u201dversionsofitssampleBlocksandJavaOpModes,showinghowtousetheexternalUVC\ncameraforVisionPortaloperations.\nBeforeopeningandeditinganOpMode,verifythattheintendedconfiguration(withcamera)isactive. Alsoverifythatthe\nnamereferencedintheOpModematchesthenamespecifiedintheconfigurationfile.\nImagePreview\nTheFIRSTTechChallengeappsprovidecamerapreviewfor\u2018stream-enabled\u2019OpModesusingVisionPortal.\nOnapairedDRIVERSTATIONdevice,withthecameraconnectedandconfigured,selectastream-enabledOpMode. Press\ntheINITbutton,andwaitbrieflyforstreamingsoftwaretoinitialize;donotpresstheSTARTbutton. Insteadopenthemain\nmenu(the3dotsinupperrighthandcornerofthescreen)andselectCameraStream. Thisoptionappearsonlyatthistime,\nduringwhichthegamepadsandSTARTbuttonaredisabledforsafety.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,96\nThecameraimagewillappearontheDRIVERSTATIONscreen. Manuallytouchtheimagetorefreshit. Topreserveband-\nwidth,onlyoneframeissentatatime.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,97\nThisoptionmaybeusedtoadjustthecamera,withfrequentmanualimagerefreshingasneeded. Whenfinished,openthe\nmainmenuandselectCameraStreamagaintoturnoffthepreview. Thepreviewimagewillclose, thegamepadswillbe\nenabled,andtheSTARTbuttonmaybepressedtocontinuerunningtheOpMode.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,98\nImportantNote: BecausetheCameraStreamfeatureisonlyavailableduringtheINITphaseofanOpMode,youmustensure\nthattheVisionPortalisactivatedinyourOpModebeforethewaitForStartcommand:\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,99\nIfyoudonotseetheCameraStreamoptioninyourmainmenuonyourDRIVERSTATION,thenverifythattheVisionPortal\nis activated before the waitForStart command in your Op Mode. Also make sure you\u2019ve given the system enough time to\ninitializetheVuforiasoftwarebeforeyouchecktoseeifCameraStreamisavailable.\nScrcpy\nToviewthecameraoutputfromacomputerwhileanOpModeisrunning,youcanusescrcpy. Todothis,youwillfirstneed\ntoobtainanADBconnectionwithyourControlHub. ThiscanbedonebyconnectingaUSB-A-USB-CcabletotheUSB-Cport\nonyourControlHub. IfonWindows,youmayalsoconnecttoyourControlHubWiFinetworkandopentheREVHardware\nClient. Onceconnected,usetheseinstructionstoinstallandrunscrcpyonyourcomputer.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,100\nImportant Note: While scrcpy is a great way to view the camera output outside of competitions, the Competition Manual\ndoesnotallowteamstohaveanydevicesotherthantheDRIVERSTATIONconnectedtoyourControlHubduringamatch.\nSeeruleR708forthefulldetails.\nExternalHDMIMonitor\nAlternatively, camera output can be viewed on a display monitor or other device plugged into the HDMI port on the REV\nControlHub.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,101\nImportantNote: WhileaportabledisplaymonitorcanbeusedtoviewortroubleshootthecamerastreamonyourControl\nHub,teamsarenotallowedtohaveaportabledisplaymonitorconnectedtotheirControlHubduringamatch.\nAdvancedUsers\nForcustomstreams,advancedusersofAndroidStudiomayconsulttheAPIdocumentationforCameraStreamClient,Cam-\neraStreamServerandCameraStreamSourceclasses.\n2.3.7 ConfiguringanExternalUVCCameraandaPoweredUSBHub\nIntroduction\nTheCompetitionManualallowstheuseofUSBVideoClass(UVC)compatiblecamerasforcomputervision-relatedtasks.\nSee rule R715 for the full details. Teams who are using an Android smartphone as their ROBOT CONTROLLER have the\noptionofusinganexternallyconnectedcamerainsteadofthebuilt-incameraforcomputervisiontasks.\nTheadvantageofusinganexternalcameraisthatthecameracanbemountedinalocationthatisconvenientforvision-\nrelatedtaskswhiletheAndroidRobotControllercanbemountedwhereitisconvenientforRobotController-relatedtasks.\nThedisadvantageofusinganexternalcameraisthereisadditionalcomplexityintroducedwiththeUSB-connectedcamera.\nAnexternalcameraaddscostsandweighttoarobotanditneedstobewiredcorrectlytorunproperly.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,102\nWhattypeofExternalCameracanbeUsed?\nThesystemsupportsa\u201cUVC\u201dorUSBVideoDeviceClasscameras. Theoretically,ifacameraisUVCcompliant,thenitshould\nworkwiththesystem. However,thereareacoupleofrecommendedwebcamerasthathavebeentestedwiththeFIRSTTech\nChallengesoftwareandhavebeencalibratedtoworkaccuratelywiththissoftware:\n\u2022 LogitechHDWebcamC310\n\u2022 LogitechHDProWebcamC920\nNote that calibrating a UVC camera is an advanced task. Details on how to create a calibration file can be found in the\ncommentsoftheteamwebcamcalibrations.xmlfilethatisavailableaspartoftheftc_appprojectfolder(visitthislinkforan\nonlinecopyofthefile).\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,103\nUSBHub\nTeamswhowouldliketouseanexternalcamerawillneedaUSBhubtoconnecttheirAndroidRobotControllertotheexternal\ncameraandtheREVRoboticsExpansionHub. Toworkproperly,theUSBhubshouldmeetthefollowingrequirements:\n1. CompatiblewithUSB2.0.\n2. Supportsadatatransferrateof480Mbps.\nNotethattheModernRoboticsCorePowerDistributionModulecannotbeusedforthistasksinceitsdatatransferspeedis\nnotfastenoughtoworkwiththeUSB-connectedwebcam.\nAlsonotethattheCompetitionManualpermitstheuseofapoweredUSBhubtomakethisconnection. SeeruleR617forthe\nfulldetails. IfateamusesapoweredUSBhub,thepowertooperatetheUSBhubcanonlycomefromeitherofthefollowing\nsources:\n1. AnexternallyconnectedCOTSUSBBatteryPackincompliancewiththeCompetitionManual. SeeruleR602forthe\nfulldetails.\n2. The5VDCAuxpowerportofaREVRoboticsExpansionHub(notethatthisrequiresadvancedskillstoimplement).\nFIRSThastestedafewUSB2.0poweredhubsandrecommendsonefromAnker. Atthetimethisdocumentwaswritten,\nthishubwasavailablefromAnker.com.\nTheAnker4-portpoweredhubisconvenientbecauseithasaMicroUSBportthatisusedtoconnectthehubtoa5Vpower\nsource(highlightedwithorangecircleinfigurebelow).\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,104\nThisportallowsausertoplugastandardUSBtypeBMicroCableintothehub,andthenconnecttheotherendofthecable\n(whichhasaUSBTypeAconnector)intotheoutputportofanexternal5VUSBbatterypack. Intheimagebelow,theAnker\n4porthubispoweredbya\u201climefuel\u201dexternal5VbatterypackusingastandardTypeAtoTypeBUSBMicrocable. Notethe\nbatteryishighlightedbytheyellowoutlineinthefigurebelow.\nAUSBhubcanalsodrawpowerfromthe5VauxiliaryportsontheREVRoboticsExpansionHub. Thisconfigurationrequires\nthat the user have a special cable that on one end can be plugged into the 5V Auxiliary port and on the other end can be\npluggedintothepowerportoftheUSBhub.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,105\nNotethatteamscancreatethisspecialcableusingoneendofaservoextensioncable(toplugintothe5Vauxport)and\noneendofaMicroUSBcable(toplugintotheAnkerhub\u2019spowerport). Creatingthiscableisanadvancedtaskandshould\nonly be attempted by teams who have guidance from an adult mentor who has expertise in electronics and wiring! It is\nextremely important that the polarity is correct for this special cable. If the polarity is reversed it could damage your\nelectronicequipment.\nSampleOpModes\nThere are sample Blocks and Java Op Modes that demonstrate how to use the external UVC web camera for Vuforia or\nTensorFlowoperations. BeforeateamcanusetheexternalUVCcamera, aconfigurationfilemustbeconfiguredwiththe\nexternalcameradefinedasoneoftheUSB-connecteddevices.\nOnceavalidconfigurationfilehasbeendefinedandactivated,theprogrammercanusetheexternalUVCcamera,insteadof\ntheinternalAndroidcameras,forvision-relatedtasks.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,106\n2.3.8 AddinganExpansionHub\nIntroduction\nA single REV Robotics Control or Expansion Hub has a limited amount of input/output (I/O) ports available. In some in-\nstances,youmightwanttousemoredevicesthanthereareportsavailable. Fortheseinstancesyoumightneedtoconnect\nanExpansionHubtoyourfirstHubtoaddmoreI/Oports.\nThisdocumentdescribeshowtoconnectandconfigureanadditionalExpansionHubforuseintheFIRSTTechChallenge.\nNote that the FIRST Tech Challenge Competition Manual limits the maximum number of Control or Expansion Hubs on a\nsinglerobottotwo. SeeruleR701forthefulldetails.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,107\nEquipmentNeeded\nTofollowalongwiththeinstructionalstepsinthisdocument,youwillneedthefollowingitems:\nRequiredItem(s) Image\nREVRoboticsDriverHub(REV-31-1596)\nREVRoboticsSwitch,Cable,&Bracket(REV-31-1387).\nREV Robotics Tamiya to XT30 Adapter Cable (REV-31-\n1382).\nFIRST-approved12VBattery(suchasTetrixW39057). For\na list of FIRST-approved12V batteries, refertothe current\nCompetitionManual,ruleR601.\ncontinuesonnextpage\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,108\nTable 5\u2013continuedfrompreviouspage\nRequiredItem(s) Image\nREVRoboticsControlHub(REV-31-1595).\nREVRoboticsExpansionHub(REV-31-1153).\ncontinuesonnextpage\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,109\nTable 5\u2013continuedfrompreviouspage\nRequiredItem(s) Image\nREVRobotics(orequivalent)3-PinJSTPHCable(REV-35-\n1414,3packshownbutonlyoneneeded).\nREVRoboticsXT30ExtensionCable(REV-31-1394).\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,110\nConnectingtheExpansionHub\n1. Thefirststepistousethe3-pinJSTPHcableandtheXT30cabletodaisychainthetwoHubstogether. Beforeyoudo\nthis,ensurethatneitherHubispoweredon.\nUse the XT30 extension cable to connect an XT30 power port on the Control Hubs to an XT30 power port on the other\nExpansionHub.\n<INSETIMAGE>\n2. TheControlHubandExpansionHubusetheRS-485serialbusstandardtocommunicatebetweendevices. Youcanuse\nthe3-pinJSTPHcabletoconnectoneoftheportslabeled\u201cRS485\u201dontheControlHubtooneoftheportslabeled\u201cRS485\u201d\nontheExpansionHub.\n<INSERTIMAGE>\nNotethat it is not important which \u201cRS485\u201d port that youselect on the Expansion Hub or ControlHub. Either port should\nwork.\n3. Onceyouhavethetwodevicesdaisychainedtogether(12VpowerandRS-485signal)youcanconnectthebatteryand\npowerswitch,andpoweronthedevices.\n<INSERTIMAGE>\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,111\nConfiguringBothdevices\nIfyousuccessfullydaisychainedyourExpansionHubandControlHub,thenyoushouldbeabletocreateanewconfiguration\nfilethatincludesbothdevices.\nNote: IfyoualreadyhaveaconfigurationthatcontainsjusttheControlHub,youcanaddtheExpansionHubbyeditingthe\nconfigurationandpressingthe\u201cScan\u201dbutton.\nConnect your Driver Hub to the Control Hub\u2019s WiFi network and select the Configure Robot option from the Driver Station\napp. PresstheNewbuttontocreateanewconfigurationfile. Whenyoufirstscanforhardware,yourRobotControllershould\ndetecttheembeddedControlHub. TheRobotControllerwillautomaticallylabelthisdeviceasanControlHub\u201cPortal\u201d. The\nRobotControllerwillcommunicatethroughthisportaltotheindividualHubs.\n<INSERTIMAGE>\nIfyouclickonthePortalitemintheconfigurationscreen,youshouldseeboththeControlHubandtheExpansionHublisted.\n<INSERTIMAGE>\nYoucansavethisconfigurationfileandreturntothemainscreenoftheDriverStation. Aftertherobothasbeenrestarted,\nbothHubsshouldhaveasolidgreenLED.OntheExpansionHub,theLEDshouldblinkblueevery~5seconds.\nCongratulations,youarenowreadytouseyourcombinationofControlandExpansionHubs! Youcanconfigureandoperate\ntheseHubsasyouwouldanindividualHub.\nUsingTwoExpansionHubs\nTeamswithoutaccesstoaControlHubmayusetwoExpansionHubsontheirrobot.\nAdditionalEquipmentNeeded\nThereissomeadditionalequipmentrequiredforteamswhoaren\u2019tusingaControlHubontheirrobot.\nRequiredItem(s) Image\nAFIRST-approvedAndroidsmartphonewiththeFTCRobot\nController app installed. For a list of FIRST-approved An-\ndroid smartphones, refer to the current Competition Man-\nual,ruleR704.\nUSBTypeAmaletotypemini-Bmalecable.\ncontinuesonnextpage\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,112\nTable 6\u2013continuedfrompreviouspage\nRequiredItem(s) Image\nMicroUSBOTGadapter.\nAnadditionalREVRoboticsExpansionHub(REV-31-1153).\nChangingtheAddressofanExpansionHub\nYoucanusetheAdvancedSettingsmenuoftheRobotControllerApptochangetheaddressofanyconnectedExpansion\nHubs.\nImportantNote: IfbothofyourExpansionHubshavethesameaddressorwerejustremovedfromthebox(bydefault,the\naddressissetto2),youneedtochangetheaddressofoneofthem_before_connectingthemtogether. Thisguideassumes\nthatyouwillbesettingtheaddressofthefirstExpansionHubbeforeconnectingthesecondExpansionHub.\nWithyourfirstExpansionHubconnectedtothe12VbatteryandtotheRobotController,launchtheSettingsmenufromthe\nRobotControllerapp(noteyoucanalsodothisfromtheDriverStationapp,iftheDRIVERSTATIONispairedtotheRobot\nController).\n1. SelecttheAdvancedSettingsitemtodisplaytheAdvancedSettingsmenu.\n2. ThenselecttheExpansionHubAddressChangeitemtodisplaytheExpansionHubaddressscreen.\n3. TheUSBserialnumberoftheExpansionHubanditscurrently-assignedaddressshouldbedisplayed.\nImportant Note: If any Expansion Hubs that are physically connected and powered are not displayed, there may be an\naddressconflict. Ifthishappens,disconnectallExpansionHubsexcepttheonewhoseaddressyouwanttochange.\n4. UsethedropdownlistcontrolontherighthandsidetochangeanExpansionHub\u2019saddress. Addressesthatconflictwith\nothercurrently-connectedExpansionHubswon\u2019tbeavailable.\nPushthe\u201cDone\u201dbuttontochangetheaddress. YoushouldseeamessageindicatingthattheExpansionHub\u2019saddresshas\nbeenchanged.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,113\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,114\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,115\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,116\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,117\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,118\nConnectingtheTwoExpansionHubs\n5. AfteryouhavechangedtheaddressofoneoftheHubs,youcanusethe3-pinJSTPHcableandtheXT30cabletodaisy\nchainthetwoHubstogether. Beforeyoudothis,disconnectthe12VbatteryandpowerswitchfromthefirstExpansionHub.\nUsetheXT30extensioncabletoconnectanXT30powerportononeoftheExpansionHubstoanXT30powerportonthe\notherHub.\n6. TheExpansionHubsusetheRS-485serialbusstandardtocommunicatebetweendevices. Youcanusethe3-pinJSTPH\ncabletoconnectoneoftheportslabeled\u201cRS485\u201dononeExpansionHubtooneoftheportslabeled\u201cRS485\u201dontheother\nExpansionHub.\nNotethatitisnotimportantwhich\u201cRS485\u201dportthatyouselectonanExpansionHub. Eitherportshouldwork.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,119\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,120\n7. Onceyouhavethetwodevicesdaisychainedtogether(12VpowerandRS-485signal)youcanreconnectthebatteryand\npowerswitch,andthenconnecttheRobotControllerandpoweronthedevices.\nConfiguringYourExpansionHubs\nIfyousuccessfullydaisychainedyourtwoExpansionHubs,thenyoushouldbeabletocreateanewconfigurationfilethat\nincludesbothdevices.\nNote: If you already have a configuration that contains just the USB-connected Expansion Hub, you can add the second\nExpansionHubbyeditingtheconfigurationandpressingthe\u201cScan\u201dbutton.\nConnecttheRobotControllerandselecttheConfigureRobotoptionfromtheSettingsmenu. PresstheNewbuttontocreate\nanewconfigurationfile. Whenyoufirstscanforhardware,yourRobotControllershoulddetecttheExpansionHubthatis\nimmediatelyconnectedtotheRobotControllerviatheOTGadapterandUSBcable. TheRobotControllerwillautomatically\nlabelthisdeviceasanExpansionHub\u201cPortal\u201d. TheRobotControllerwillcommunicatethroughthisportaltotheindividual\nExpansionHubs.\nIfyouclickonthePortalitemintheconfigurationscreen,youshouldseetwoExpansionHubslisted,eachwiththeirrespective\naddressesaspartoftheirdefaultdevicename.\nYoucansavethisconfigurationfileandreturntothemainscreenoftheRobotController. Aftertherobothasbeenrestarted,\neachHub\u2019sLEDshouldbeblinkinginthemannerthatindicatesitsindividualaddress.\nCongratulations, you are now ready to use your dual Expansion Hubs! You can configure and operate these Hubs as you\nwouldanindividualHub.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,121\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,122\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,123\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,124\n2.3.9 SavingtheConfigurationInformation\nOnce you have configured your hardware, you must save the information to the configuration file. If you do not save this\ninformation,itwillbelostandtherobotcontrollerwillbeunabletocommunicatewithyourhardware.\nSavingtheConfigurationInformationInstructions\n1. PresstheDonebuttontogouponelevelintheconfigurationscreens.\n2. PresstheDonebuttonagaintoreturntothehighestlevelintheconfigurationscreens.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,125\n3. PresstheSavebutton.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,126\n4. Whenprompted,specifyaconfigurationfilenameusingthetouchscreen\u2019skeypad(\u201cinto_the_deep\u201dforthisexample).\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,127\n1. PresstheOKbuttontosaveyourconfigurationinformationusingthatfilename.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,128\n6. Aftertheconfigurationfilehasbeensaved,touchtheAndroidback-arrowbuttontoreturntothemainscreenoftheapp.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,129\n7. VerifythattheconfigurationfileistheactiveconfigurationfileonthemainDRIVERSTATIONscreen.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,130\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,131\nChapter 3\nInstalling Android Studio AS\n3.1 Installing Android Studio AS\n3.1.1 AndroidDeveloperWebsite\nAndroidStudioisdistributedfreelybyGoogle,andthemostup-to-datereferenceforinstallingandusingtheAndroidStudio\nsoftwarecanbefoundontheAndroiddeveloperwebsite:\n\u2022 https://developer.android.com/studio\nAndroidStudioisavailableontheWindows,MacOS,andLinuxoperatingsystems.\n3.1.2 SystemRequirements\nBeforeyoudownloadandinstalltheAndroidStudioyoushouldfirstcheckthelistofsystemrequirementsontheAndroid\ndeveloper\u2019swebsitetoverifythatyoursystemsatisfiesthelistofminimumrequirements:\n\u2022 Windows\n\u2022 MacOS\n\u2022 Linux\nCaution: WiththeintroductionofAndroidStudioLadybug,theJDKthatispackagedwithAndroidStudioisincompatible\nwiththeFtcRobotControllerworkspace. IfyouinstallorupdateanexistinginstallationtoAndroidStudioLadybug, you\nwillneedtoinstallJDK17separately.\nUponinitialloadoftheFtcRobotControllerworkspaceusingAndroidStudioLadybug,anerrorwillbedisplayedduringthe\nGradlesyncandAndroidStudiowillrecommendthatyouupgradeGradle. DonotupgradeGradle.\nFormoredetailedinstructionssee: Configuring\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,132\n3.1.3 DownloadingandInstallingAndroidStudio\nOnceyouhaveverifiedthatyourlaptopsatisfiestheminimumsystemrequirements,youcangototheAndroiddeveloper\u2019s\nwebsitetodownloadandinstallAndroidStudio:\n\u2022 https://developer.android.com/studio\nClickonthegreen\u201cDOWNLOADANDROIDSTUDIO\u201dbuttontostartthedownloadprocess.\nAcceptthelicensetermsandthenpushtheblue\u201cDOWNLOADANDROIDSTUDIO\u201dbuttonontheAndroidDeveloperwebpage\ntodownloadthesoftware.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,133\nOnce the setup package has downloaded, launch the application and follow the on-screen instructions to install Android\nStudio.\n3.1.4 ConfiguringAndroidStudio(Ladybugandlater)\nNote: SeetheCautionaboveforwhythisisnecessary.\nNote: AndroidStudioLadybugupdatestheunderlyingJetBrainsIntelliJversionsuchthattheinterfaceisaVSCodelook\nalike. The screenshots in this documentation use the JetBrains/Android Studio Classic UI which is no longer supported\nnativelybyJetBrains. Tofollowalong,usersshouldinstalltheClassicUIplugin.\n1. InstallJDK17IfyoudidnotalreadyhavethisinstalledindependentlyofAndroidStudio. e.g. IfyouwereusingAndroid\nStudio\u2019sbundledJDK,thenwhenLadybugisinstalledAndroidStudiowillunhelpfullyoverwriteyouroldbundledJDK\nversion. Notethere\u2019sabugintheSettings(cid:0)BuildTools(cid:0)Gradledialogthatmaymakeyouthinkyouroldversionofthe\nJDKisthere,butitisnot. YoumustuseanunbundledversionoftheJDK.\n2. GotoFile->SettingsandunderBuild,Execution,Deployment->BuildTools->GradleusetheAddJDKfromdiskoption\ntoselectthenewlyinstalledJDK17. Intheimagebelowtakecarefulnoteofthedirectorypathsfortheoptionslabeled\njbr-17andjbr-21. Notethattheyarethesame. ThisistheaforementionedUIbug,andthatisAndroidStudiooverwriting\nyouroldJDK.Inthisimageyou\u2019llseeI\u2019veselectedtheJDKthatwasinstalledindependently.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,134\n3.1.5 DoNotUpgradeGradle\nIfyouhaveupgradedAndroidStudiofromanearlierversiontoLadybug,oryoudidnotinstallandconfiguretheJDKpriorto\nloadingaFtcRobotControllerworkspace,thenAndroidStudiomaypresentanerrorandrecommendthatyouupgradeGradle.\nDonotdothis. TheFtcRobotControllerbuildisincompatiblewithupgradedGradle. Ifyoudo,youwillpresentedwithanother,\nevenmore,indecipherableerror.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,135\nTorecover,youneedtorollbackthechangesthatAndroidStudiomadeuponthatclick. TodothatselectGit->Uncommitted\nChanges->ShowShelf\nThatwillshowthechangesyouhaveinyourworkspace. Youwanttorollbackthe4gradlefilesshowninthefollowingimage.\nYoucan eitherselect the Changescheckboxtoselect allfiles, or individuallyselect the gradlefiles. Note thatif youhave\nchanges in yourworkspace that haven\u2019t been committed, youwant tobe careful not to select those files or youmaylose\nwork.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,136\nOnceyouhavetheproperfilesselected,clicktheRollbackbutton.\nResyncandthatshouldrevertyoutotheerrorthatpromptedyoutoupgradeGradleinthefirstplace. Fromtherefollowthe\ninstructionsabovetoinstallJDK17.\n3.2 Downloading the Android Studio Project Folder AS Legacy\nTheSDKcanbedownloadedfromaGitHubrepository. GitHubisaweb-basedversioncontrolcompanythatletsindividuals\nand organizations host content online. In order to access the Android Studio software, you will need to have a GitHub\naccount. YoucancreateoneforfreebyvisitingtheGitHubwebsite:\n\u2022 https://github.com/\nThesoftwareisstoredinarepositorycalled\u201cFtcRobotController\u201dundertheFIRST-Tech-ChallengeGitHuborganization:\n\u2022 https://github.com/FIRST-Tech-Challenge/FtcRobotController\nImportant: AdvancedGitHubUsers-thistutorialassumesthattheuserisanovicewithrespecttousingGitHubandthegit\nversioncontrolsoftware. IfyouareaGitHubpoweruser,youcanusegittoclonealocalcopyofthepublicGitHubrepository.\nThisdocument,however,doesnotexplainhowtousegittoaccesstherepository. Itprovidesinstructionsondownloading\ntherepositoryasa.ZIPfileinstead.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,137\nFromthemainrepositorywebpage,clickonthe\u201creleases\u201dlinktojumptotheReleasespagefortherepository. TheReleases\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,138\npageshouldlisttheavailablesoftwarereleasesfortherepository. Thelatestreleaseshouldbedisplayednearthetopofthe\npage.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,139\nEach software release should include an Assets section that you can use to download the software that you will need to\nprogramyourrobot. NotethatyoumighthavetoclickonthetriangularsymboltoexpandthisAssetssection.\nClickontheSourcecode(zip)linktodownloadthecompressedAndroidStudioprojectfolder.\n3.2.1 ExtractingtheContentsoftheArchivedProjectFile\nOnceyouhavedownloadedthearchived(.ZIP)projectfileyoucanmovethisfiletothelocationofyourchoice.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,140\nBeforeyoucan import the projectintoAndroidStudio, youmust first extractthe contents of the archivedprojectfile. For\nWindowsusers,rightmouseclickonthefileandselect\u201cExtractAll\u201dfromthepopupmenu. Windowsshouldpromptyouto\nselectadestinationfortheextractedprojectfolder. Thedialogthatappearsshouldlooksimilartotheoneshowinthefigure\nbelow.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,141\nHighlightthesuggestednameforthedestinationfolder(inthefigureabove,thesuggestednameis\u201cFtcRobotController-6.0\u201d)\nandchangethedestinationfoldernameintosomethingmoreuserfriendly. Inthisexample,wewillchangethenameofthe\ndestinationfolderto\u201cmycopy\u201d.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,142\nAfteryouhaverenamedthedestinationfolder,extractthecontentsofthearchivetothefolder. Aftertheextractionprocess\niscomplete,verifythattheprojectfolderwassuccessfullyextractedtoitstargetdestination.\nOnce you have successfully extracted the contents of the archived file, you are ready to import the project into Android\nStudio.\n3.2.2 ImportingtheProjectintoAndroidStudio\nInordertoimporttheProject,youwillneedtolaunchtheAndroidStudiosoftwareonyourcomputer. OnthemainAndroid\nStudioWelcomescreen,selecttheoptionto\u201cImportproject(Gradle,Eclipse,ADT,etc.)\u201d tobegintheimportprocess.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,143\nAndroidStudioshouldpromptyoutoselecttheprojectfolderthatyouwouldliketoimport. Usethefilebrowserinthepop\nupdialogboxtolocateandthenselectthefolderthatyouextractedinanearliersectionofthisdocument. Makesureyou\nselect the extracted project folder (and not the .ZIP file which might have a similar name to the extracted folder). Hit the\n\u201cOK\u201dbuttontoimporttheselectedprojectintoAndroidStudio.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,144\nInthefigureabovetheprojectfoldercalled\u201cFtcRobotController-6.0\u201disselectedtobeimportedintoAndroidStudio. Itmight\ntake Android Studio several minutes to import the project. Once the project has been successfully imported, the screen\nshouldlooksimilartotheonedepictedintheimagebelow.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,145\n3.3 Disabling Android Studio Instant Run Legacy AS\nAttention: Instant Run was removed in Android Studio version 3.5, and is no longer an issue for versions of Android\nStudiothatareAndroidStudio3.5ornewer. However,thisarticleremainsforthoseusingFIRSTTechChallengeSoftware\nDevelopmentKit(SDK)v7.1andolderwithpreviousversionsofAndroidStudio.\n3.3.1 Introduction\nIfyouareanAndroidStudiouser,oneofthemostimportantstepstotakeistodisableAndroidStudioInstantRun. Instant\nRunisafeaturethatisdesignedtostreamlinethedevelopmentprocessbyreducingthetimetoapplycodechangestoyour\napp. Unfortunately,InstantRunislimitedinfunctionandwhenusedwiththeFIRST TechChallengeAndroidStudioproject\nfolder,cancausesevereanddifficult-to-troubleshootproblems.\nTeamswhouseAndroidStudiomustdisableInstantRun.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,146\n3.3.2 LocatingInstantRunSettings\nWhenyoufirstlaunchAndroidStudioaWelcomescreenshouldappear. YoucannavigatetotheInstantRunSettingsfrom\nthisWelcomescreenbyselectingthe\u201cConfigure->Settings\u201ditemfromthe\u201cConfigure\u201ddropdownlistinthelowerrighthand\ncornerofthescreen.\nOn the left hand side of the Settings window, there should be a category called \u201cBuild, Execution, Deployment\u201d. Within\nthis category, click on the \u201cInstant Run\u201d subcategory to display the Instant Run settings for your Android Studio installa-\ntion. Bydefault,InstantRunisenabledwhenyoufirstinstallAndroidStudio. Uncheckthe\u201cEnableInstantRuntohotswap\ncode/resourcechangesondeploy(defaultenabled)\u201doptionandthenclickonthe\u201cOK\u201dbuttontodisableInstantRun.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,147\n3.3.3 AdditionalInformation\nThe Google Android Developer website has additional information about Instant Run. It also has instructions on how to\ndisablethisfeature:\nhttps://developer.android.com/studio/run\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,148\nChapter 4\nManaging an Android Studio Project AS\n4.1 Fork and Clone from GitHub AS\nImportant: This approach assumes a basic familiarity with git and GitHub. As with most things related to git there are\nmany different ways to satisfy any objective. This documentation describes one method for Windows users. Users not\ncomfortablewithcommandlinetoolsandgitshouldobtaintheSDKviaDownloadingtheSDKasaziparchive.\n4.1.1 Forksvs. Clones\nA Fork on GitHub is a copy of another repository on GitHub from one account to another account. The new\nforked repository retains a parent-child relationship with the origin repository. Forks are typically used when soft-\nware will have an independent line of development, such as when FTC teams develop their own team code using the\nFIRST-Tech-Challenge/FtcRobotController repository as a basis. FTC teams should create a Fork of the FIRST-Tech-\nChallenge/FtcRobotController repository as a convenient way to manage their software development process. Thanks to\nthe parent-child relationship, when changes are made to the parent repository those changes can be easily tracked and\nfetched/mergedintotheforkedrepository,keepingtheforkedrepositoryuptodate.\nWarning: Teams should not issue pull requests against the upstream parent, the FIRST-Tech-\nChallenge/FtcRobotContoller repository. Forks of the FIRST-Tech-Challenge/FtcRobotContoller repo may always\nfetchchanges,butshouldneverattempttopushchangesuptotherepo.\nA Clone is a copy of a repository, typically on a local computer. A team member creates a feature branch of the team\u2019s\nrepository for feature development, and clones the branch to a local computer. Software development and testing then\nhappenscompletelywithintheirlocalclone. Oncethey\u2019refinished,orthey\u2019vereachedacheckpoint,thechangeswithinthe\nlocalclonecanthenbepushedfromtheirlocalclonebacktotheteamfork. Thatfeaturebranchcanthenbemergedintothe\nteam\u2019smainrepositorybranchonceithasbeenacceptedbytheteam. Multipledifferentdeveloperscanworkseamlessly\nusingthisprocess.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,149\nFig. 1: The relationship between forks and clones. The clone exists on your local laptop while the fork exists on GitHub\nservers.\n4.1.2 BranchStrategies\nA branch is a series of commits that are independent of any other lines of development and is typically used to develop\nnewfeaturesfortherepository. ThedefaultbranchfortheFtcRobotControllerrepository,anditsforksandclones,ismaster\n(thoughforallnewerrepositoriescreatedbyGitHubthedefaultbranchiscalledmain). Usingbranchesjudiciouslycanhelp\ndeveloperscollaborateonacommonsetofsoftwarebyisolatingchanges,keepingthedefaultbranchclean,andproviding\nspaceforfeaturedevelopmenttoiterateindependentofsoftwarethat\u2019sbeendeemed\u2018productionready\u2019.\nFig.2: Asinglebranchwiththedefaultnameofmaster\nEachcirclerepresentsacommittoabranch. Thenameofthebranchalwayspointstothemostrecentcommit,alsoknown\nastheHEAD.WhiletheremaybemanybranchesthereisonlyoneHEADanditalways,unlessitisinadetachedstate,points\ntothelatestcommitofthecurrentlycheckedoutbranch. Allothercommitspointtotheirimmediateparent.\nAcommitisasnapshotoftheentireworkspaceatapointintime. Gitdoesnotstorediffs. Ifyoumakeachangetoafile,and\ncreateanewcommitwiththechangedfile,itstorestheentirechangedfileinthecommit. Toavoidunnecessaryduplication\noffiles,ifyourrepositoryconsistsofthreefiles-onechangedandtheothertwowereunchanged-thenthesnapshotmerely\npointsbacktotheunchangedfilesratherthancontainingunchangeddata.\nNotethateachcommithasaparentwhichallowsgittodeterminereachabilityofcommitsfromdifferentbranches. Italso\nallows git to determine the common ancestor commit of any two branches, which is important when merging branches.\nMoreonthatlater.\nSo what is a branch? A branch is simply a named pointer to a commit. When a branch is created you are just telling git\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,150\ntocreateaname,andpointitatacommit. Beingonabranchsimplymeansthatwhenyouaddanewcommit,gitmoves\nthe branch name to the new commit and the new commit\u2019s parent is the commit that the branch name was pointing to\npreviously. Sincethiscreatesalineofdevelopmentindependentoftheparent,developerscanexperiment,makechanges,\ndevelopnewfeatures,allwithoutdisruptingtheworkofotherteammembers. Whenadeveloperissatisfiedthatabranch\nisstableenoughtobeshared,thebranchcanbemergedbackintotheparent.\nFig.3: Twobranchesthatpointtothesamecommit.\nImmediatelyaftercreatingabranchthenewbranchnamesimplypointstothelatestcommitfromthebranchthatthenew\nbranchwascreatedfrom. Nowimaginethatwecreateanewcommitonthatbranch.\nFig.4: Newcommitonthefeaturebranch.\nNotehowthenewcommitcausedthenamepointerofthefeaturebranchtomovetothenewcommit,whilethenamepointer\nforthemasterbranchremainsonthepriorcommit,buttheparentofthenewcommitisthecommitthatthenamepointer\nformasterpointsto. Ifanewcommitisaddedtothemasterbranchthentheparentofthenewcommitisalsothecommit\nthatmasterispointingtotherebycreatingindependentlinesofdevelopment.\nEventuallyyoutypicallywanttomergethatfeaturebranchbackintothemainlineofdevelopmentrepresentedbythemaster\nbranch. Whenyoumergeonebranchintoanother,gittraversestheancestorcommitsofthebranchestofindthecommon\nancestor. It then determines what changed from the common ancestor, to the head of each branch, and applies those\nchangestoanewcommitcalledamergecommit. Anartifactofthisprocessisthatthemergecommitwillhavetwoparents.\nAsshownabove,thefeaturebranchstillexists. Newcommitsaddedtothefeaturebranchwilldivergeagainfromthemaster\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,151\nFig.5: Twoindependentlinesofdevelopment.\nFig.6: Mergingthefeaturebranchbackintothemasterbranch.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,152\nbranch. Howeverifdevelopmentofthefeatureisfinished,thebranchcanbedeleted. Deletionofthebranchsimplyresults\ninthenamepointerbeingdeleted. Branchdeletiondoesnotresultinthedeletionofanycommitsthatweremadeonthat\nbranch. As you can see here, the commit that was on the feature branch still exists and is reachable by referencing the\ncorrectparentfromthemergebranch.\nIt can be useful to ensure that the default branch in team forks and clones matches the default branch for FIRST-Tech-\nChallenge/FtcRobotController. Howeveratypicaldevelopmentpatternwillhaveteamdeveloperscommittingteamsoftware\nbacktothemasterbranch,whetherviamergesfromfeaturebranches,ordirectcommitstomaster.\nFig.7: FIRST-Tech-Challenge/FtcRobotControllermastervs. typicalteamrepositorymaster.\nTeamcommitsarerepresentedbybluecircles,whilecommitscontainingSDKupdatesarerepresentedbygreencircles. The\npurplecircleisamergecommit. Moreonmergeslater. InthisinstanceteamcommitsareinterleavedwithSDKupdates(1),\nwhichproducesasituationwherethetwodefaultbranchesdonotmatch.\n(1)Notreally,ormaybedependinguponhowthecommitparentagelaysout. Thisisavastlysimplifiedviewof\nthings,butissufficienttodemonstratethelogicalconceptandistheviewofthingsyougetifyousimplyexecute\ngitlog. Foranin-depth,approachable,explanationofexactlywhatishappeningwithcommitsastheyrelateto\nbranchesseethistutorial.\nWhilethisisaperfectlyacceptable,andaverycommonbranchmanagementstrategy,certainbenefitscanbeobtainedifwe\nisolatethedefaultbranchsothatitalwaysmatchestheparent. Thefollowingfiguredemonstratesaclonewhosemaster\nbranchistrackingthemasterbranchfromFIRST-Tech-Challenge/FtcRobotController.\nThepurplecommitisamergeofv7.1intothecompetitionbranch. Inthisdiagram,v7.2andv8.0remainunmergedandthe\ncompetitionbranchwillbebuildingagainstv7.1oftheSDK.\nFollowingthismodelmeansthatcommithistoryforthemasterbranchfortheteam\u2019srepositorywillalwaysmatchthecommit\nhistoryfortheFIRST-Tech-Challenge/FtcRobotController\u2019smasterbranch. Allsoftwarethatteamsintendtocompetewith\nis merged into a competition branch. Features, new software, experiments, etc, are worked on in child branches of the\ncompetition branch and merge back into the competition branch, not the master branch. SDK updates to a team clone\u2019s\nmasterbranchshouldalwaysbeconflictfree,updatescanbedoneindependentofmergesintoacompetitionbranch,andif\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,153\nFig.8: Teamrepository\u2019smasteralwaysmatchesFIRST-Tech-Challenge/FtcRobotController\u2019smasterbranch.\nsomethinggoessidewayswhendoingamergeofanSDKupdateintodevelopmentitcanbemorestraightforwardtorecover\nasopposedtobackingoutofanupdatestraightintomasterwherethebranchesdonotmatch.\nMoredetailedinformationonthemechanicsofbranchingcanbefoundhereUsingBranches\n4.1.3 GettingStarted(Quick-StartGuide)\nImportant: Thefollowingassumesalloperationsaredoneonthemasterbranchofyourlocalrepository.\n1. ObtainandinstallGitForWindowsThissoftwarecontainsagitclientalongwithabashshell. Allofthecommandline\nsnippetsbelowassumeyouareusingabashshellandthatgitisinyourpath. GitForWindowsistheeasiestwayto\nprovidethisforWindowsmachines. Macshaveabuiltinbashshellcalledterminal,butgitmustbeinstalledseparately.\n2. ForktheFIRST-Tech-Challenge/FtcRobotControllerrepositoryintoyouraccountonGitHub.\nTip: This step requires you to have a GitHub account, and you need to be logged in to GitHub in order to Fork a\nrepository.\nForkingtherepositoryisaseasyasclickingthe\u201cFork\u201dbuttonshownintheimageabove. Thiswilltakeyoutothe\u201cCreate\nanewfork\u201dpage,andwillauto-fillthe\u201cOwner\u201dand\u201cRepositoryname\u201dfields. Justenteradescription(optional),leave\nthe\u201cCopythemasterbranchonly\u201doptionchecked,andclickthegreen\u201cCreatefork\u201dbutton.\nOncecreated,yournewforkwillbelocatedatgithub.com/<username>/FtcRobotControllerunlessyouedited\ntheforkname.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,154\nFig.9: ForkingaGitHubrepository.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,155\n3. Clonefromyourforkontoyourlocalcomputer. NoteintheimagebelowtheaccountisFIRST-Tech-Challenge,butafter\nyourfork,theaccountshouldbeyourteamaccount. Inallotherrespectstheuserinterfacewillbeidentical.\nFig.10: Cloningaforkedrepository.\nTocloneyourforkoftheFtcRobotController,followthesesteps:\n1. Clickthegreen\u201cCode\u201dbuttonshownintheimageabove.\n2. Ensurethe\u201cLocal\u201dand\u201cHTTPS\u201dsub-tabsareselected.\n3. Clickthe\u201c\u201dbuttontocopytheurlinthetextentrybox.\n4. Opena\u201cGitBash\u201dshellinasuitabledirectory. ThisiseasilydoneonWindowsbyopeningtheFileExplorer,finding\nthedirectoryyouwanttoclonetherepositoryinto,rightclickingonthatdirectoryfolderandselecting\u201cGitBash\nhere\u201d\n5. WithintheGitBashshell,executethefollowingcommand\ngit clone <copied-url>\n4. Gitwilldownloadacloneofyourrepository. Whenit\u2019sdone,Codeaway\u2026\n5. Thisisthepointwhereyoucancreateabranchforfeaturedevelopment,ifdesired. Tocreateabranch,wecancreate\nandswitchtoanewbranchviathefollowinggit-checkoutcommand:\ngit checkout -b <branchname>\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,156\nUsingthe-boptioncreatesthenewbranchspecifiedby<branchname>andautomaticallyswitchestothatbranch.\nOmittingthe-boptionwillsimplyswitchtoanexistingbranchifoneexists.\nBestPractices\n\u2022 DonotmakechangestosoftwareintheFtcRobotControllerdirectorywithintherepository. SDKupdateswillbemuch\neasierifyoudonotchangeanythingwithintheFtcRobotControllerdirectory.\n\u2022 Limittheuseoflong-livedbranches. Branchesshouldimplementafeature. Branchesshouldnottrackmilestones. For\nexampleabranchnamed\u2018league-meet-1\u2019istrackingamilestone. Itismuchbetterifyourbranchestracksmallerunits\nof development. \u2018detect-target\u2019, \u2018drive-to-parking\u2019, \u2018drop-game-element\u2019. Break your software down into tasks for the\nrobottodo,andusebranchestoimplementthosetasks. Thiswillallowformucheasiercollaborativedevelopment,\nmuchsmallerchangesetswhenmerging,andmucheasierfetchesandmerges.\n\u2022 Trytokeepyourgitindexclean. Thiswillmakefetchesandmergeseasier. git statusisyourbestfriendhere. Use\ngit statusoftentoseewhathaschangedinyourlocalworkspace. Commitofteninlogicalchunkssothatitiseasy\ntoseethemostrecentchanges.\n\u2022 Useshort,meaningful,commitmessages. Donotuseslang,offensive,orpersonalmessaginginacommitmessage.\nWhenyoupushyoursoftwaretoGitHub, thosecommitmessageswillbepublic. Ifyouplantoeventuallybecomea\nprofessional software developer, and you retain your existing GitHub account any potential employer will be able to\nreviewyourcommitmessages. Treadlightlyhere.\n4.1.4 UpdatingyourForkandLocalClone.\nUpdatingtheSDKinvolvespullingnewlyreleasedsoftwareintobothyourlocalclone\u2019sandyourfork. Therearetwoways\ntogoaboutthis. Eitherdirectlyfetchandmergesoftwarefromtheparentintoyourforkongithub,thenfetchandmergeto\nyourlocal,orfetchfromtheparentintoyourlocalclone,mergelocallyandthenpushtoyourfork.\nThisauthorprefersthelatterbecauseitgivesthedevelopertheopportunitytestnewsoftwarebeforepushingtothefork. It\nalsoallowsformergeconflictresolutionlocallyinsteadofthroughGitHub\u2019sUI.\nObtainingtheLatestSoftware\nWhendescribinghowtoupdatearepositorymanybasictutorialswillusethegit pullcommand. Thegit pullcommand\nisactuallydoingafetchandmergefortheuserbehindthescenes. Thiscanbefine,butitisusefultounderstandtheconcepts\nof fetching and merging as independent operations. If things go south, and you have a good concept of the underlying\nmechanics,youaremuchmorelikelytobeabletofixanysubsequentproblems.\nRemotes\nGit is fundamentally built around the idea that there can be many copies of a repository floating about on the internet, or\notherpeople\u2019smachines,orcorporatefileservers,oranynumberoflocations. Andthattheserepositoriescanlinkedtoeach\notherremotely. Aremoterepositoryissimplydefinedasaversionofarepositoryhostedsomewhereelse. Inthepreceding\nexamples,yourforkofFtcRobotControllerisaremoteofyourlocalclone.\nRemotesmaybereferencedingitcommandsandarepositorycanhaveanynumberofremotes. Thedefaultnameforthe\nremoteofarepositorythathasbeenclonedis\u2018origin\u2019. Theconventionalnameofaremotethattrackstheparentofaforkis\n\u2018upstream\u2019.\nToseewhatremoteareestablishedforagivenrepository\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,157\nFig.11: IllustrationofFtcRobotControllerasremotenamedorigin.\nFig.12: Alocalrepositorywithtworemotes.\n$ git remote -v\nToaddtheparentofyourteam\u2019sforkasaremoteofyourlocalclone\n$ git remote add upstream https://github.com/FIRST-Tech-Challenge/FtcRobotController.git\nImportant: Setting the FIRST Tech Challenge FtcRobotController repository as an upstream remote of your local clone\nallows you to fetch changes from the FIRST-Tech-Challenge/FtcRobotController to your local clone using the alias name\n\u2018upstream\u2019. This is very powerful. If the reason why this is important isn\u2019t immediately obvious, please re-read the two\nparagraphsunderheadermarkedUpdating your Fork and Local Cloneabove.\nTherestofthistutorialassumesthatyouhaveaddedFIRST-Tech-Challenge/FtcRobotControllerasanupstreaminyour\nlocalclone.\nFetching\nFetchingistheprocessofdownloadingsoftwarechangesfromaremoterepository. Notespecificallythatfetchingdoesnot\nmodifyanyoftheexistingsoftwareintherepositorythatyouarefetchinginto,gitisolatesthechangesinthelocalrepository.\nIfyouareworkingwithateam, andateammatehaspushedsoftwaretoyourFtcRobotControllerfork, youmayfetchthat\nsoftwaretoalocalclonebyrunning\n$ git fetch origin\nThiswilldownloadanychangesinallbranchesontheremotenamedoriginthatarenotpresentinthelocalrepository.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,158\nFig.13: Fetchingchangesfromorigin.\nMerging\nMergingistheprocessofmergingfetchedsoftwareintoabranch,mostcommonlythecurrentbranchoftherepository. A\nmergeiswherethingsaremostlikelytogetabitconfusing. However,ifyouaresimplymergingfromaremotemasterinto\nalocalmaster,andyourlocalmasterisalwaystrackingtheremote,yourmergesshouldgosmoothly.\nFig.14: Mergingfetchedchangesfromtheoriginrepository.\nEnsureyouareonthemasterbranchandrunthefollowing:\n$ git merge origin/master\nThemasterbranchshouldbeclean(i.e. git statusonthemasterbranchshowsnofilesthataremodifiedbutuncom-\nmitted) when this operationis performed. Teammembers should be doing developmentwork in featurebranches, not in\nthemasterbranch.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,159\nConflicts\nConflicts,or\u201cWhathappenswhenmorethanonechangeispendingforagivenpieceofcode.\u201d It\u2019sbesttoreadthisgreat\ntutorialonGitmergeconflicts. Mergeconflictsareanormalpartofworkinginteams,andonlywithexperiencecanyoulearn\ntoeffectivelymanageconflicts. Alwaysapproachwithpatienceandadeeprespectfortheprocess.\n4.1.5 UpdatingtheSDKtotheLatestVersion\nImportant: Remembertouse git remote -v toensurethattheupstreamhasbeensetasaremoteonyourclone. If\nnot,besuretoreviewthe\u201cRemotes\u201dsectionagaintoaddtheFtcRobotControllerrepositorytotheupstreamremoteonyour\nclone.\nToupdatefromtheSDK,wesimplyfetchfromupstream,FIRST-Tech-Challenge/FtcRobotController,theparentofyourteam\nfork,thenmergeandpushtoorigintocompletetheupdate.\nFig.15: Fetchingchangesfromtheupstreamrepository.\nInsteadoffetchingfromorigin,fetchfromupstream. Thiscopiesinanycommitsthatyoudon\u2019talreadyhaveinyourlocal\nclone. Inthediagramabovethatisthev8.0commit. Yourlocalmasterisnotchanged. Itisstillpointingto,andrepresent-\ning, the v7.2 commit. Since a commit is a complete snapshot of a workspace at a point in time, nothing changes in your\nworkspace,butyourrepositoryhasanewcommitwiththebranchnameupstream/master.\n$ git fetch upstream\nAfterfetching,mergetheupstream/masterbranchintomaster. Ifyourlocalmastermatchesyourupstreammasterthena\nmergeisassimpleasmovingthemasterbranchlabeltothecommitthatupstream/masterispointingto. Thisisreferredto\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,160\nFig.16: Mergingfetchedchangesfromtheupstreamrepository.\nasafast-forwardmerge. Andsinceacommitisacompletesnapshotofaworkspaceatapointtime,yourlocalworkspace\nnowcontainsthesnapshotrepresentedbyv8.0.\n$ git merge upstream/master\nOnceyou\u2019vemergedtheupstream/masterintoyourlocalclone\u2019smasterbranch,pushthosechangestoGitHubsothatyour\nGitHubclonereflectstheupstreamrepository.\n$ git push origin master\nIf you were working in a feature branch and want to bring the new SDK changes into that feature branch you merge from\nmasterintothebranchbycheckingoutthebranchandrunningthemergecommand. Thisiswherethingsmightgetdicey\nasthisiswhereyouaremostlikelytoencountermergeconflicts.\n$ git checkout <feature-branch>\n$ get merge master\n4.1.6 DowngradingtheSDKtoaPreviousVersion\nTypically, the working branch of a local repository, whether it\u2019s master, or a competition branch will eventually contain a\nseriesofteamcommitsinterleavedwithSDKupdatecommits. Inthisscenarioateamcannotsimplyrollbacktoaprior\nSDKversionwithoutalsorollingbackalloftheirteamcommits. Considerthefollowingdiagram.\nIfyoujustchoppedoffthebranchatM7.2, you\u2019dlosethethreeblueteamcommits. Inordertoretainteamwork, instead\ncreateanewmergecommitthatrevertsthe8.0commit. Donotrevertmergecommits,e.g. M8.0. Themergecommititself\nmaycontainworkthatrepresentsthedivergenceofthethetwobranchesthatweremerged. Thisisnotwhatyouwant. You\nwanttoreverttheparentofthemergecommitthatrepresentsthenew,old,SDKversion.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,161\nFig.17: Pushingfetchedandmergedchangesbacktoyourteamfork.\nFig.18: ArepositorywithbothteamcommitsandSDKupdatecommits.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,162\nAShortDigressiononTags\nA tag is simply a named pointer to a commit, that unlike a branch pointer, or HEAD, never moves. Since a commit is a\nsnapshotintimeofanentireworkspace,thisallowsadevelopertotagapointintimeinanimmutablefashion. FIRSTuses\ntagstotrackSDKversionsthroughastandardsemanticversioningnamingscheme. WhenanewSDKversionisreleased,\ntheFTCengineeringteampushesareleasecandidatebranchtoFIRST-Tech-Challenge/FtcRobotController,thenmergesthat\nbranchintomaster. Thisresultsintwocommits,thenewSDKversioncommitthatcontainsallthegoodstuff,andamerge\ncommitrepresentingthemergefromthecandidatebranchintomaster. Thereleaseisthenformallycut,whereatagisthen\ncreated,onthemergecommit.\nTagsfromremotesarenotautomaticallycopiedintoarepositoryonaclone. Toretrievetagsexecute.\n$ git fetch --all --tags\nThe\u2013alloptionfetchesatoncefromallremotes,the\u2013tagsoptiontellsgittofetchthetags. Tagsalwaysfollowthesemantic\nversioningrules. e.g. v7.0,v7.1,v7.2,v8.0,etc.\nThe^syntaxallowsonetoreferenceparentsofacommitandcanbeappliedtotagnames. tag^istheimmediateparentof\nthecommittagpointsto. Forcommitswithmultipleparentssuchasmergecommitsonecanapplyanumbertorefertoa\nspecificparent. tag^1isthesameastag^andisthefirstparentofthecommit,tag^2isthesecondparentofthecommit.\nMergingtheInverseofanSDKUpdate\nThediagrambelowshowsthev8.0tagpointingtothev8.0mergecommitalongwithreferencestotheparentsofv8.0.\nFig.19: v8.0tagpointingtothev8.0mergecommit.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,163\nImportant: IfanycommitshavedependenciesonnewfeaturesorAPIsintroducedintherevertedversions,thenyourbuild\nwillbreak. Youwillhavetomanuallyfigureouthowtofixyoursoftwaresothatitisnolongerdependsuponrevertedsoftware.\nRememberthatGitdoesnotdeletecommits(withafewexceptions),soinordertorevertacommitwemustcreateanew\ncommit that is the inverse of the commit you want to revert from. And you\u2019ll want to do this for every version, in reverse\norder,thatyouwanttoundo. Thetargetofthecommandbelowisthetagoftheversionyouwanttoundo,notthetagofthe\nversionyouwanttorevertto.\nFig.20: Resultofrevert-anewmergecommitrepresentingtherevertfromv8.0tov7.2.\nBecausethemergecommithastwoparents,andyouwanttoreferencetheSDKversioncommit,usethetagnameyouwant\ntorollbackandappend^2. Forexampletorollbackv8.0,resultingintheSDKcompilingagainstv7.2use.\n$ git revert -Xtheirs v8.0^2\nThe-Xtheirsoptionisaconveniencethatsays, \u201cIfthereareanyconflicts, automaticallytakethesoftwarefromthev8.0^2\nside.\u201d\nWarning: If you want to downgrade more than one revision you must revert each revision in sequence otherwise you\ncould wind up with changes remaining after reversion from the SDK version in between latest and the target you are\nreferringto. Forexampleifyouneedtodowngradefromv8.1.1tov8.0,forreferenceallSDKversionscanbefoundhere,\nyoumustrevertv8.1.1followedbyv8.1. Ifyoudon\u2019tfollowthisorder,thenchangesinv8.1.1thatdon\u2019toverlapwithv8.1\nwillremaininyourworkspaceandthat\u2019snotwhatyouwant.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,164\n4.1.7 Summary\nAssumesallcommandsarerunfromtherootdirectoryofyourlocalclone. Alsoassumesyouarenotcommittingteamcode\ntoyourlocalmasterbranch,butinsteadareworkinginacompetitionbranch.\nAddFIRST-Tech-Challenge/FtcRobotControllerasaremote\n$ git remote add upstream https://github.com/FIRST-Tech-Challenge/FtcRobotController.git\nUpdatethetolatestSDKversion\n$ git checkout master\n$ git fetch upstream\n$ git merge upstream/master\n$ git push origin master\n$ git checkout competition\n$ git merge master\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,165\nChapter 5\nWriting an Op Mode AS\n5.1 Enabling Developer Options AS\nAfteryouhaveconfiguredyourAndroidphone,youwillalsohavetomakesurethatyourphoneisindevelopermodebefore\nyouwillbeabletoinstallappsontothephoneusingthetoolsthatareincludedwithAndroidStudio.\nImportant: ControlHubUsers-TheControlHubhasDeveloperOptionsautomaticallyenabledfromthefactory,soyoudo\nNOTneedtodothisstepforyourControlHub.\nTheAndroidDeveloperwebsitecontainsinformationonhowtoenableDeveloperOptionsontoyourphone. Ifyouvisitthe\nfollowinglinkandreadthesectionentitled\u201cEnablingOn-deviceDeveloperOptions\u201dyouwillseethatyoucanenableDeveloper\nOptionsonyourAndroidphonebygoingtoSettings->Aboutphoneonthephone,andthentappingtheBuildnumberseven\ntimes.\n\u2022 https://developer.android.com/studio/run/device#setting-up\nIn order to be able to use the Android Studio tools to install apps onto your phone, you will need to make sure that the\nDeveloperOptionsandUSBdebuggingareenabledforbothofyourphones.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,166\nWhenyoufirstconnectaphonetoyourcomputerwithAndroidStudiorunning,thephonemightpromptyouifitisOKtoallow\nthecomputertohaveUSBdebuggingaccesstothephone. Ifthishappens,makesurethatyoucheckthe\u201cAlwaysallowfrom\nthiscomputer\u201doptionandhittheOKbuttontoallowUSBdebugging.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,167\n5.2 Creating and Running an OpMode AS\n5.2.1 TeamCodeModule\nIfyousuccessfullyimportedtheAndroidStudioprojectfolder,youwillseeontheprojectbrowseranAndroidmodulenamed\nTeamCode. TheAndroidStudioprojectfolderwillbeusedtobuildaversionoftheRobotControllerappthatincludesthe\ncustomOpModethatyouwillwritetocontrolyourcompetitionrobot.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,168\nWhenyoucreateyourclassesandOpModes,youwilltocreatethemintheorg.firstinspires.ftc.teamcodepackage\nthatresidesintheTeamCodemodule. ThispackageisreservedforyourusewithintheAndroidStudioprojectfolder.\n5.2.2 JavadocReferenceInformation\nTheJavadocreferencedocumentationfortheSDKisavailableonline. VisitthefollowingURLtoviewtheSDKdocumentation:\n\u2022 https://javadoc.io/doc/org.firstinspires.ftc\n5.2.3 EnablingAutoImport\nTheautoimportfeatureofAndroidStudioisaconvenientfunctionthathelpssavetimeasyouwriteyourOpMode. Ifyou\nwouldliketoenablethisfeature,selecttheEditor->General->AutoImportitemfromtheAndroidStudioSettingsscreen. This\nwilldisplaytheeditor\u2019sautoimportsettings.\nCheckthe\u201cAddunambiguousimportsonthefly\u201dsothatAndroidStudiowillautomaticallyaddtherequiredimportstatements\nforclassesthatyouwouldliketouseinyourOpMode.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,169\n5.2.4 SampleOpModes\nAgreatwaytolearnhowtoprogramarobotistoexaminethesampleopmodesthatareincludedwiththeAndroidStudio\nproject folder. You can locate these files in the FtcRobotController module in the package org.firstinspires.ftc.\nrobotcontroller.external.samples.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,170\nIfyouwouldliketouseasampleOpMode,copyitfromtheorg.firstinspires.ftc.robotcontroller.external.\nsamplespackageandmoveittotheorg.firstinspires.ftc.teamcodepackage.\nInyournewlycopiedOpMode,lookforthefollowingannotation,\n@Disabled\nandcommentoutthislinetoenabletheOpModeandallowittoberunontheRobotController:\n//@Disabled\n5.2.5 CreatingYourFirstOpMode\nRight mouse click on the org.firstinspires.ftc.teamcode package and select New->Java Class from the pop-up\nmenu. TheCreateNewClassdialogboxappear. SpecifythenameofthenewclassasMyFIRSTJavaOpModeandspecify\nasitssuperclasstheclassLinearOpModewhichisinthepackagecom.qualcomm.robotcore.eventloop.opmode.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,171\nPresstheOKbuttontocreatethenewclass. Thesourcecodeforthenewclassshouldappearintheeditingpaneofthe\nAndroidStudiouserinterface.\nModifythemainportionofyourOpModesothatitlookslikethefollowingcode(notethatthepackagedefinitionandsome\nimportstatementshavebeenomittedinthefollowingsourcecode):\n@TeleOp\npublic class MyFIRSTJavaOpMode extends LinearOpMode {\nprivate Gyroscope imu;\n(continuesonnextpage)\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,172\n(continuedfrompreviouspage)\nprivate DcMotor motorTest;\nprivate DigitalChannel digitalTouch;\nprivate DistanceSensor sensorColorRange;\nprivate Servo servoTest;\n@Override\npublic void runOpMode() {\nimu = hardwareMap.get(Gyroscope.class, \"imu\");\nmotorTest = hardwareMap.get(DcMotor.class, \"motorTest\");\ndigitalTouch = hardwareMap.get(DigitalChannel.class, \"digitalTouch\");\nsensorColorRange = hardwareMap.get(DistanceSensor.class, \"sensorColorRange\");\nservoTest = hardwareMap.get(Servo.class, \"servoTest\");\ntelemetry.addData(\"Status\", \"Initialized\");\ntelemetry.update();\n// Wait for the game to start (driver presses PLAY)\nwaitForStart();\n// run until the end of the match (driver presses STOP)\nwhile (opModeIsActive()) {\ntelemetry.addData(\"Status\", \"Running\");\ntelemetry.update();\n}\n}\n}\nWe will use this sourcecode as the frameworkfor yourfirst OpMode. Note that AndroidStudio automatically savesyour\nsourcecodeasyouareeditingit.\nCongratulations! You\u2019vewrittenanOpMode. Itdoesnotdomuch,butwewillmodifyittomakeitmoreuseful.\n5.2.6 ExaminingtheStructureofYourOpMode\nItcanbehelpfultothinkofanOpModeasalistoftasksfortheRobotControllertoperform. ForalinearOpMode,theRobot\nController will process this list of tasks sequentially. Users can also use control loops (such as a while loop) to have the\nRobotControllerrepeat(oriterate)certaintaskswithinalinearOpMode.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,173\nIfyouthinkaboutanOpModeasalistofinstructionsfortherobot,thissetofinstructionsthatyoucreatedwillbeexecuted\nbytherobotwheneverateammemberselectstheOpModecalledMyFIRSTJavaOpModefromthelistofavailableOpModes\nforthisRobotController.\nLet\u2019slookatthestructureofyournewlycreatedOpMode. Here\u2019sacopyoftheOpModetext(minussomecomments, the\npackagedefinition,andsomeimportpackagestatements):\n@TeleOp\npublic class MyFIRSTJavaOpMode extends LinearOpMode {\nprivate Gyroscope imu;\nprivate DcMotor motorTest;\n(continuesonnextpage)\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,174\n(continuedfrompreviouspage)\nprivate DigitalChannel digitalTouch;\nprivate DistanceSensor sensorColorRange;\nprivate Servo servoTest;\n@Override\npublic void runOpMode() {\nimu = hardwareMap.get(Gyroscope.class, \"imu\");\nmotorTest = hardwareMap.get(DcMotor.class, \"motorTest\");\ndigitalTouch = hardwareMap.get(DigitalChannel.class, \"digitalTouch\");\nsensorColorRange = hardwareMap.get(DistanceSensor.class, \"sensorColorRange\");\nservoTest = hardwareMap.get(Servo.class, \"servoTest\");\ntelemetry.addData(\"Status\", \"Initialized\");\ntelemetry.update();\n// Wait for the game to start (driver presses PLAY)\nwaitForStart();\n// run until the end of the match (driver presses STOP)\nwhile (opModeIsActive()) {\ntelemetry.addData(\"Status\", \"Running\");\ntelemetry.update();\n}\n}\n}\nAtthestartoftheOpModethereisanannotationthatoccursbeforetheclassdefinition. Thisannotationstatesthatthisis\natele-operated(i.e.,drivercontrolled)OpMode:\n@TeleOp\nIfyouwantedtochangethisOpModetoanautonomousOpMode,youwouldreplacethe@TeleOpwithan@Autonomous\nannotationinstead.\nYoucanseefromthesamplecodethatanOpModeisdefinedasaJavaclass. Inthisexample,theOpModenameiscalled\nMyFIRSTJavaOpModeanditinheritscharacteristicsfromtheLinearOpModeclass.\npublic class MyFIRSTJavaOpMode extends LinearOpMode {\nYou can also see that the OnBot Java editor created five private member variables for this OpMode. These variables will\nhold references to the five configured devices that the OnBot Java editor detected in the configuration file of your Robot\nController.\nprivate Gyroscope imu;\nprivate DcMotor motorTest;\nprivate DigitalChannel digitalTouch;\nprivate DistanceSensor sensorColorRange;\nprivate Servo servoTest;\nNext,thereisanoverriddenmethodcalledrunOpMode. EveryOpModeoftypeLinearOpModemustimplementthismethod.\nThismethodgetscalledwhenauserselectsandrunstheOpMode.\n@Override\npublic void runOpMode() {\nAtthestartoftherunOpModemethod,theOpModeusesanobjectnamedhardwareMaptogetreferencestothehardware\ndevicesthatarelistedintheRobotController\u2019sconfigurationfile:\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,175\nimu = hardwareMap.get(Gyroscope.class, \"imu\");\nmotorTest = hardwareMap.get(DcMotor.class, \"motorTest\");\ndigitalTouch = hardwareMap.get(DigitalChannel.class, \"digitalTouch\");\nsensorColorRange = hardwareMap.get(DistanceSensor.class, \"sensorColorRange\");\nservoTest = hardwareMap.get(Servo.class, \"servoTest\");\nThehardwareMapobjectisavailabletouseintherunOpModemethod. ItisanobjectoftypeHardwareMapclass.\nNotethatwhenyouattempttoretrieveareferencetoaspecificdeviceinyourOpMode, thenamethatyouspecifyasthe\nsecondargumentoftheHardwareMap.getmethodmustmatchthenameusedtodefinethedeviceinyourconfiguration\nfile. Forexample,ifyoucreatedaconfigurationfilethathadaDCmotornamedmotorTest,thenyoumustusethissame\nname(itiscasesensitive)toretrievethismotorfromthehardwareMapobject. Ifthenamesdonotmatch,theOpModewill\nthrowanexceptionindicatingthatitcannotfindthedevice.\nInthenextfewstatementsoftheexample,theOpModepromptstheusertopushthestartbuttontocontinue. Itusesanother\nobjectthatisavailableintherunOpModemethod. ThisobjectiscalledtelemetryandtheOpModeusestheaddDatamethod\ntoaddamessagetobesenttotheDriverStation. TheOpModethencallstheupdatemethodtosendthemessagetothe\nDriverStation. ThenitcallsthewaitForStartmethod,towaituntiltheuserpushesthestartbuttononthedriverstation\ntobegintheOpModerun.\ntelemetry.addData(\"Status\", \"Initialized\");\ntelemetry.update();\n// Wait for the game to start (driver presses PLAY)\nwaitForStart();\nNotethatalllinearOpModesshouldhaveawaitForStartstatementtoensurethattherobotwillnotbeginexecutingthe\nOpModeuntilthedriverpushesthestartbutton.\nAfterastartcommandhasbeenreceived,theOpModeentersawhileloopandkeepsiteratinginthisloopuntiltheOpMode\nisnolongeractive(i.e.,untiltheuserpushesthestopbuttonontheDriverStation):\n// run until the end of the match (driver presses STOP)\nwhile (opModeIsActive()) {\ntelemetry.addData(\"Status\", \"Running\");\ntelemetry.update();\n}\nAs the OpMode iterates in the while loop, it will continue to send telemetry messages with the index of \u201cStatus\u201d and the\nmessageof\u201cRunning\u201dtobedisplayedontheDriverStation.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,176\n5.2.7 BuildingandInstallingYourOpMode\nVerifythattheRobotControllerphoneisconnectedtoyourlaptopandthatthelaptophasUSBdebuggingpermissionforthe\nphone.\nOr, if you are using a Control Hub, verify that the Control Hub is powered by a freshly charged 12V battery, and that it is\nconnectedtoyourlaptopthroughitsUSBTypeCport. NotethattheControlHubshouldautomaticallyhaveUSBdebugging\npermissionenabled.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,177\nWhenusingtheControlHub,pleasemakesureyouusetheTypeCport(andnottheUSBMiniport)toconnecttheControl\nHubtoyourdevelopmentlaptop.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,178\nLooktowardsthetopoftheAndroidStudiouserinterfaceandfindthelittlegreenPlayorRunbutton(whichisrepresented\nbyagreentriangle)nexttothewordsTeam Code. PressthisgreenbuttontobuildtheRobotControllerappandtoinstallit\nontoyourphone.\nAndroid Studio should prompt you to select a target device to install the Robot Controller app. Your screen might look\nsomethingliketheimageshownbelow.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,179\nMakesurethatyouselectthecorrecttargetdevice. InthefigureabovetheMotorolaphoneisselectedasthetargetdevice.\nHitOKtobuildtheAPKfileandinstallitonthetargetdevice.\nNotethatifyoupreviouslyinstalledacopyoftheRobotControllerappfromtheGooglePlaystore,theinstallationofyour\nnewlybuiltappwillfailthefirsttimeyouattempttoinstallit. ThisisbecauseAndroidStudiodetectsthattheappthatyou\njustbuildhasadifferentdigitalsignaturethantheofficialversionoftheRobotControllerappthatwasinstalledfromGoogle\nPlay.\nIfthishappens,AndroidStudiowillpromptyouifit\u2019sOKtouninstalltheprevious(official)versionoftheappfromyourdevice\nandreplaceitwiththeupdatedversionoftheapp. SelectOKtouninstallthepreviousversionandtoreplaceitwithyournewly\ncreatedRobotControllerApp(seeimageabove).\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,180\nIftheinstallationwassuccessful,theRobotControllerappshouldbelaunchedonthetargetAndroiddevice. Ifyouareusing\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,181\nanAndroidphoneasyourRobotController,youshouldseethemainRobotControllerappscreendisplayedonthephone.\nAlthoughtheControlHublacksabuiltinscreen,ifyouareControlHubuser,youcanverifythattheappwasinstalledonto\nyourControlHubproperlybylookingatyourDriverStation. IftheDriverStationindicatesthatitissuccessfullyconnectedto\ntheControlHub(aftermomentarilydisconnectingwhiletheupdatewasoccurring)thentheappwassuccessfullyupdated.\n5.2.8 RunningYourOpMode\nIfyousuccessfullybuiltandinstalledyourupdatedAndroidappwithyournewOpMode,thenyouarereadytoruntheOpMode.\nVerifythattheDriverStationisstillconnectedtotheRobotController. SinceyoudesignatedthatyourexampleOpModeisa\ntele-operatedOpMode,itwillbelistedasaTeleOpOpMode.\nOntheDriverStation,usetheTeleOpdropdownlistcontroltodisplaythelistofavailableOpModes. SelectyourOpMode\n(\u201cMyFIRSTJavaOpMode\u201d)fromthelist.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,182\nPressthe\u201cINIT\u201dbuttontoinitializetheOpMode.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,183\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,184\nTheOpModewillexecutethestatementsintherunOpModemethoduptothewaitForStartstatement. Itwillthenwaituntil\nyoupressthestartbutton(whichisrepresentedbythetriangularshapedsymbol)tocontinue.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,185\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,186\nOnceyoupressthestartbutton,theOpModewillcontinuetoiterateandsendthe\u201cStatus: Running\u201dmessagetotheDriver\nStation. TostoptheOpMode,pressthesquare-shapedstopbutton.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,187\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,188\nCongratulations! YouranyourfirstJavaOpMode!\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,189\n5.2.9 ModifyingYourOpModetoControlaMotor\nLet\u2019smodifyyourOpModetocontroltheDCmotorthatyouconnectedandconfiguredforyourREVRoboticsControlHubor\nREVRoboticsExpansionHub. Modifythecodefortheprogramloopsothatitlookslikethefollowing:\n// run until the end of the match (driver presses STOP)\ndouble tgtPower = 0;\nwhile (opModeIsActive()) {\ntgtPower = -this.gamepad1.left_stick_y;\nmotorTest.setPower(tgtPower);\ntelemetry.addData(\"Target Power\", tgtPower);\ntelemetry.addData(\"Motor Power\", motorTest.getPower());\ntelemetry.addData(\"Status\", \"Running\");\ntelemetry.update();\n}\nIfyoulookatthecodethatwasadded,youwillseethatwedefinedanewvariablecalledtargetpowerbeforeweenterthe\nwhileloop.\ndouble tgtPower = 0;\nAtthestartofthewhileloopwesetthevariabletgtPowerequaltothenegativevalueofthegamepad1\u2019sleftjoystick:\ntgtPower = -this.gamepad1.left_stick_y;\nTheobjectgamepad1isavailableforyoutoaccessintherunOpModemethod. Itrepresentsthestateofgamepad#1on\nyourDriverStation. NotethatfortheF310gamepadsthatareusedduringthecompetition,theYvalueofajoystickranges\nfrom-1,whenajoystickisinitstopmostposition,to+1,whenajoystickisinitsbottommostposition. Intheexamplecode\nabove, younegatetheleft_stick_yvaluesothatpushingtheleftjoystickforwardwillresultinapositivepowerbeing\nappliedtothemotor. Notethatinthisexample,thenotionofforwardsandbackwardsforthemotorisarbitrary. However,\ntheconceptofnegatingthejoystickyvaluecanbeveryusefulinpractice.\nThenextsetofstatementssetsthepowerofmotorTesttothevaluerepresentedbythevariabletgtPower. Thevaluesfor\ntargetpowerandactualmotorpowerarethenaddedtothesetofdatathatwillbesentviathetelemetrymechanismtothe\nDriverStation.\ntgtPower = -this.gamepad1.left_stick_y;\nmotorTest.setPower(tgtPower);\ntelemetry.addData(\"Target Power\", tgtPower);\ntelemetry.addData(\"Motor Power\", motorTest.getPower());\nAfteryouhavemodifiedyourOpModetoincludethesenewstatements,pressthebuildbuttonandverifythattheOpMode\nwasbuiltsuccessfully.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,190\n5.2.10 RunningYourOpModewithaGamepadConnected\nYourOpModetakesinputfromagamepadandusesthisinputtocontrolaDCmotor. TorunyourOpMode,youwillneedto\nconnectaLogitechF310orotherapprovedgamepadtotheDriverStation.\nConnectthegamepadtotheDriverStation. IfusingaREVRoboticsDriverHub, youcandirectlyconnectthegamepadto\noneoftheUSB-Aports. OnaDRIVERSTATIONphone,youwillneedaMicroUSBOTGadaptercable.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,191\nYourexampleOpModeislookingforinputfromthegamepaddesignatedastheuserordriver#1. PresstheStartbuttonand\ntheAbuttonsimultaneouslyontheLogitechF310controllertodesignateyourgamepadasuser#1. Notethatpushingthe\nStartbuttonandtheBbuttonsimultaneouslywoulddesignatethegamepadasuser#2. OnaPS4-stylegamepad,usethe\nOptionsbuttonandCrossforuser#1,orOptionsandCircleforuser#2.\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,192\nIfyousuccessfullydesignatedthegamepadtobeuser#1,youshouldseealittlegamepadiconabovethetext\u201cUser1\u201din\ntheupperrighthandcorneroftheDriverStationScreen. Wheneverthereisactivityongamepad#1,thelittleiconshouldbe\nhighlightedingreen. Iftheiconismissingorifitdoesnothighlightingreenwhenyouuseyourgamepad, thenthereisa\nproblemwiththeconnectiontothegamepad.\nSelect,initializeandrunyourMyFIRSTJavaOpModeOpMode.\nIf you configured your gamepad properly, then the left joystick should control the motion of the motor. As you run your\nOpMode, be careful and make sure you do not get anything caught in the turning motor. Note that the User #1 gamepad\niconshouldhighlightgreeneachtimeyoumovethejoystick. Alsonotethatthetargetpowerandactualmotorpowervalues\nshouldbedisplayedinthetelemetryareaontheDriverStation.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,193\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,194\n5.3 Controlling a Servo AS\nInthissection,youwillmodifyyouropmodetocontrolaservomotorwiththebuttonsofthegamepad.\n5.3.1 WhatisaServoMotor?\nAservomotorisaspecialtypeofmotor. Aservomotorisdesignedforprecisemotion. Atypicalservomotorhasalimited\nrangeofmotion.\nInthefigurebelow,\u201cstandardscale\u201d180-degreeservoisshown. ThistypeofservoispopularwithhobbyistsandwithFIRST\nTechChallengeteams. Thisservomotorcanrotateitsshaftthrougharangeof180degrees. Usinganelectronicmodule\nknownasaservocontrolleryoucanwriteanopmodethatwillmoveaservomotortoaspecificposition. Oncethemotor\nreachesthistargetposition,itwillholdtheposition,evenifexternalforcesareappliedtotheshaftoftheservo.\nServomotorsareusefulwhenyouwanttodoprecisemovements(forexample,sweepanareawithasensortolookfora\ntargetormovethecontrolsurfacesonaremotelycontrolledairplane).\n5.3.2 ModifyingYourOpModetoControlaServo\nLet\u2019smodifyyouropmodetoaddthelogicrequiredtocontrolaservomotor. Forthisexample,youwillusethebuttonson\ntheLogitechF310gamepadtocontrolthepositionoftheservomotor.\nWithatypicalservo,youcanspecifyatargetpositionfortheservo. Theservowillturnitsmotorshafttomovetothetarget\nposition,andthenmaintainthatposition,evenifmoderateforcesareappliedtotryanddisturbitsposition.\nFortheFIRSTTechChallengecontrolsystem,youcanspecifyatargetpositionthatrangesfrom0to1foraservo. Atarget\npositionof0correspondstozerodegreesofrotationandatargetpositionof1correspondsto180degreesofrotationfor\natypicalservomotor.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,195\nInthisexample,youwillusethecoloredbuttonsontherightsideoftheF310controllertocontrolthepositionoftheservo.\nInitially,theopmodewillmovetheservotothemidwayposition(90degreesofits180-degreerange). Pushingtheyellow\n\u201cY\u201dbuttonwillmovetheservotothezero-degreeposition. Pushingtheblue\u201cX\u201dbuttonorthered\u201cB\u201dbuttonwillmovethe\nservotothe90-degreeposition. Pushingthegreen\u201cA\u201dbuttonwillmovetheservotothe180-degreeposition.\nModifyyouropmodetoaddthefollowingcode:\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,196\n// run until the end of the match (driver presses STOP)\ndouble tgtPower = 0;\nwhile (opModeIsActive()) {\ntgtPower = -this.gamepad1.left_stick_y;\nmotorTest.setPower(tgtPower);\n// check to see if we need to move the servo.\nif(gamepad1.y) {\n// move to 0 degrees.\nservoTest.setPosition(0);\n} else if (gamepad1.x || gamepad1.b) {\n// move to 90 degrees.\nservoTest.setPosition(0.5);\n} else if (gamepad1.a) {\n// move to 180 degrees.\nservoTest.setPosition(1);\n}\ntelemetry.addData(\"Servo Position\", servoTest.getPosition());\ntelemetry.addData(\"Target Power\", tgtPower);\ntelemetry.addData(\"Motor Power\", motorTest.getPower());\ntelemetry.addData(\"Status\", \"Running\");\ntelemetry.update();\n}\nThisaddedcodewillchecktoseeifanyofthecoloredbuttonsontheF310gamepadarepressed. IftheYbuttonispressed,\nit will move the servo to the 0-degree position. If either the X button or B button is pressed, it will move the servo to the\n90-degreeposition. IftheAbuttonispressed,itwillmovetheservotothe180-degreeposition. Theopmodewillalsosend\ntelemetrydataontheservopositiontotheDriverStation.\nAfteryouhavemodifiedyouropmode,youcanbuilditandthenrunit. Verifythatgamepad#1isstillconfiguredandthen\nusethecoloredbuttonstomovethepositionoftheservo.\n5.4 Using Sensors AS\n5.4.1 Color-DistanceSensor\nAsensorisadevicethatletstheRobotControllergetinformationaboutitsenvironment. Inthisexample,youwilluseaREV\nRoboticsColor-Distancesensortodisplayrange(distancefromanobject)infotothedriverstation.\nTheColor-Rangesensorusesreflectedlighttodeterminethedistancefromthesensortothetargetobject. Itcanbeusedto\nmeasureclosedistances(up5\u201dormore)withreasonableaccuracy. Notethatatthetimethisdocumentwasmostrecently\nedited,theREVColor-Rangesensorsaturatesaround2\u201d(5cm). Thismeansthatfordistanceslessthanorequalto2\u201d,the\nsensorreturnsameasureddistanceequalto2\u201dorso.\nModify your op mode to add a telemetry statement that will send the distance information (in centimeters) to the Driver\nStation.\ntelemetry.addData(\"Servo Position\", servoTest.getPosition());\ntelemetry.addData(\"Target Power\", tgtPower);\ntelemetry.addData(\"Motor Power\", motorTest.getPower());\ntelemetry.addData(\"Distance (cm)\", sensorColorRange.getDistance(DistanceUnit.CM));\ntelemetry.addData(\"Status\", \"Running\");\ntelemetry.update();\nAfteryouhavemodifiedyouropmode,buildandinstalltheupdatedRobotControllerapp,thenruntheopmodetoverifythat\nitnowdisplaysdistanceonyourDriverStation. Notethatifthedistancereads\u201cNaN\u201d(shortfor\u201cNotaNumber\u201d)itprobably\nmeansthatyoursensoristoofarfromthetarget(zeroreflection). Alsonotethatthesensorsaturatesataround5cm.\nRelease0.3 02/05/2025\nFTCDocs AndroidStudioGuide,197\n5.4.2 TouchSensor\nTheREVRoboticsTouchSensorcanbeconnectedtoadigitalportontheControlHuborExpansionHub. TheTouchSensor\nisHIGH(returnsTRUE)whenitisnotpressed. ItispulledLOW(returnsFALSE)whenitispressed.\nTheControlHuborExpansionHubdigitalportscontaintwodigitalpinsperport. Whenyouusea4-wireJSTcabletoconnect\naREVRoboticsTouchsensortoaControlHuborExpansionHubdigitalport,theTouchSensoriswiredtothesecondofthe\ntwodigitalpinswithintheport. Thefirstdigitalpinofthe4-wirecableremainsdisconnected.\nForexample,ifyouconnectaTouchSensortothe\u201c0,1\u201ddigitalportoftheControlHuborExpansionHub,theTouchSensor\nwillbeconnectedtothesecondpin(labeled\u201c1\u201d)oftheport. Thefirstpin(labeled\u201c0\u201d)willstaydisconnected.\nModifythecodeinyouropmodethatoccursbeforethewaitForStartcommandtosetthedigitalchannelforinputmode.\n// set digital channel to input mode.\ndigitalTouch.setMode(DigitalChannel.Mode.INPUT);\ntelemetry.addData(\"Status\", \"Initialized\");\ntelemetry.update();\n// Wait for the game to start (driver presses PLAY)\nwaitForStart();\nAlso,modifythecodeinyourwhilelooptoaddanif-elsestatementthatchecksthestateofthedigitalinputchannel. Ifthe\nchannelisLOW(false), thetouchsensorbuttonispressedandbeingpulledLOWtoground. Otherwise, thetouchsensor\nbuttonisnotpressed.\n// is button pressed?\nif (digitalTouch.getState() == false) {\n// button is pressed.\ntelemetry.addData(\"Button\", \"PRESSED\");\n} else {\n// button is not pressed.\ntelemetry.addData(\"Button\", \"NOT PRESSED\");\n}\ntelemetry.addData(\"Status\", \"Running\");\ntelemetry.update();\nBuild and install the updated Robot Controller app, then reinitialize and restart your op mode. The op mode should now\ndisplaythestateofthebutton(\u201cPRESSED\u201dor\u201cNOTPRESSED\u201d).\nGraciousProfessionalism\u00ae-\u201cDoingyourbestworkwhiletreatingotherswithrespectandkindness-It\u2019swhatmakes\nFIRST,first.\u201d\nFTCDocs AndroidStudioGuide,198\nChapter 6\nVersion Information\nAuthor: FIRSTTechChallenge\nVersion: 0.3\nReleaseDate: 02/05/2025\nGenerationTime: 12:30\nLicense: BSD3-Clause\nGitHash: f1bfcbf7f427945706b47b1a9ca3a0490d6e7925\nRelease0.3 02/05/2025\n",
  "context": "nameonephone\u201c9999-C-RC\u201dfortheRobotControllerandtheotherphone\u201c9999-C-DS\u201dfortheDRIVERSTATION.The\u201c-C\u201d\nindicatesthatthesedevicesbelongtothethirdsetofphonesforthisteam.\nThenameofaRobotControllerphonecanbechangedintheRCapp,usinginstructionsfoundhere. Itcanalsobechanged",
  "source_file": "resources\\Year 2\\Android Studio\\android_studios.pdf",
  "line_numbers": [
    260,
    2201
  ]
}